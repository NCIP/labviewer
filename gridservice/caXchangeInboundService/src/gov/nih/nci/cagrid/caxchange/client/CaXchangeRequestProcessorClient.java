package gov.nih.nci.cagrid.caxchange.client;

import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import gov.nih.nci.cagrid.caxchange.stubs.CaXchangeRequestProcessorPortType;
import gov.nih.nci.cagrid.caxchange.stubs.service.CaXchangeRequestProcessorServiceAddressingLocator;
import gov.nih.nci.cagrid.caxchange.common.CaXchangeRequestProcessorI;
import gov.nih.nci.cagrid.caxchange.context.stubs.CaXchangeResponseServicePortType;
import gov.nih.nci.cagrid.caxchange.context.stubs.GetResponseRequest;
import gov.nih.nci.cagrid.caxchange.context.stubs.GetResponseResponse;
import gov.nih.nci.cagrid.caxchange.context.stubs.service.CaXchangeResponseServiceAddressingLocator;
import gov.nih.nci.cagrid.caxchange.context.stubs.service.CaXchangeResponseServiceLocator;
import gov.nih.nci.cagrid.caxchange.context.stubs.types.CaXchangeResponseServiceReference;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;
import gov.nih.nci.caxchange.Credentials;
import gov.nih.nci.caxchange.Message;
import gov.nih.nci.caxchange.MessagePayload;
import gov.nih.nci.caxchange.MessageTypes;
import gov.nih.nci.caxchange.Metadata;
import gov.nih.nci.caxchange.Request;

import gov.nih.nci.caxchange.ResponseMessage;

import java.io.StringReader;

import javax.xml.parsers.DocumentBuilder;

import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.axis.message.MessageElement;
import org.apache.axis.types.URI;

import org.w3c.dom.Document;

import org.xml.sax.InputSource;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 *
 * @created by Introduce Toolkit version 1.1
 */
public class CaXchangeRequestProcessorClient extends ServiceSecurityClient implements CaXchangeRequestProcessorI {
	protected CaXchangeRequestProcessorPortType portType;
	private Object portTypeMutex;
         String testPayLoad ="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
         "<study xmlns=\"gme://ccts.cabig/1.0/gov.nih.nci.cabig.ccts.domain\" version=\"1\">\n" +
         "    <blindedIndicator>1</blindedIndicator>\n" +
         "    <multiInstitutionIndicator>1</multiInstitutionIndicator>\n" +
         "    <randomizedIndicator>1</randomizedIndicator>\n" +
         "    <shortTitleText>short_title_text</shortTitleText>\n" +
         "    <longTitleText>long_title_text</longTitleText>\n" +
         "    <descriptionText>description</descriptionText>\n" +
         "    <precisText>precis_text</precisText>\n" +
         "    <phaseCode>Ph</phaseCode>\n" +
         "    <dataEntryStatus>COMPLETE</dataEntryStatus>\n" +
         "    <coordinatingCenterStudyStatus>ACTIVE</coordinatingCenterStudyStatus>\n" +
         "    <type>ty</type>\n" +
         "    <targetAccrualNumber>123</targetAccrualNumber>\n" +
         "    <systemAssignedIdentifier>\n" +
         "        <type>local</type>\n" +
         "        <value>nci</value>\n" +
         "        <primaryIndicator>false</primaryIndicator>\n" +
         "        <systemName>nci</systemName>\n" +
         "    </systemAssignedIdentifier>\n" +
         "    <nonTreatmentEpoch>\n" +
         "        <name>NonTreatment1004</name>\n" +
         "        <descriptionText>non treatement desc</descriptionText>\n" +
         "        <accrualCeiling>0</accrualCeiling>\n" +
         "    </nonTreatmentEpoch>\n" +
         "    <nonTreatmentEpoch>\n" +
         "        <name>NonTreatment1005</name>\n" +
         "        <descriptionText>non treatment cancer desc</descriptionText>\n" +
         "        <accrualCeiling>0</accrualCeiling>\n" +
         "    </nonTreatmentEpoch>\n" +
         "    <treatmentEpoch>\n" +
         "        <name>Treatment1000</name>\n" +
         "        <descriptionText>treatement desc</descriptionText>\n" +
         "        <arm>\n" +
         "            <name>Arm 1000</name>\n" +
         "            <descriptionText>Arm 1000 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1000</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "        <arm>\n" +
         "            <name>Arm 1001</name>\n" +
         "            <descriptionText>Arm 1001 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1001</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "        <incCriteria>\n" +
         "            <questionNumber>1</questionNumber>\n" +
         "            <questionText>inclusion question 1</questionText>\n" +
         "        </incCriteria>\n" +
         "        <incCriteria>\n" +
         "            <questionNumber>2</questionNumber>\n" +
         "            <questionText>inclusion question 2</questionText>\n" +
         "        </incCriteria>\n" +
         "        <excCriteria>\n" +
         "            <questionNumber>3</questionNumber>\n" +
         "            <questionText>exclusion question 1</questionText>\n" +
         "        </excCriteria>\n" +
         "    </treatmentEpoch>\n" +
         "    <treatmentEpoch>\n" +
         "        <name>Treatment1001</name>\n" +
         "        <descriptionText>cancer desc</descriptionText>\n" +
         "        <arm>\n" +
         "            <name>Arm 1002</name>\n" +
         "            <descriptionText>Arm 1002 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1002</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "        <arm>\n" +
         "            <name>Arm 1003</name>\n" +
         "            <descriptionText>Arm 1003 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1003</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "    </treatmentEpoch>\n" +
         "    <treatmentEpoch>\n" +
         "        <name>Treatment1002</name>\n" +
         "        <descriptionText>treatement desc</descriptionText>\n" +
         "        <arm>\n" +
         "            <name>Arm 1004</name>\n" +
         "            <descriptionText>Arm 1004 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1004</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "        <arm>\n" +
         "            <name>Arm 1005</name>\n" +
         "            <descriptionText>Arm 1005 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1005</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "    </treatmentEpoch>\n" +
         "    <treatmentEpoch>\n" +
         "        <name>Treatment1003</name>\n" +
         "        <descriptionText>cancer desc</descriptionText>\n" +
         "        <arm>\n" +
         "            <name>Arm 1006</name>\n" +
         "            <descriptionText>Arm 1006 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1006</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "        <arm>\n" +
         "            <name>Arm 1007</name>\n" +
         "            <descriptionText>Arm 1007 desc</descriptionText>\n" +
         "            <targetAccrualNumber>1007</targetAccrualNumber>\n" +
         "        </arm>\n" +
         "    </treatmentEpoch>\n" +
         "    <studySite>\n" +
         "        <healthcareSite>\n" +
         "            <name>duke healthcare</name>\n" +
         "            <descriptionText>duke healthcare</descriptionText>\n" +
         "            <address><streetAddress>12359 sunrise valley drive</streetAddress><city>Reston</city><stateCode>VA</stateCode><postalCode>20191</postalCode><countryCode>USA</countryCode></address>\n" +
         "            <nciInstituteCode>code</nciInstituteCode>\n" +
         "        </healthcareSite>\n" +
         "        <irbApprovalDate>0006-06-23</irbApprovalDate>\n" +
         "        <roleCode>role</roleCode>\n" +
         "        <startDate>0006-06-24</startDate>\n" +
         "        <endDate>0006-06-25</endDate>\n" +
         "    </studySite>\n" +
         "    <studyFundingSponsor>\n" +
         "        <healthcareSite>\n" +
         "            <name>National Cancer Institute</name>\n" +
         "            <descriptionText>National Cancer Institute</descriptionText>\n" +
         "            <address><streetAddress>Coppermine Dr</streetAddress><city>Herndon</city><stateCode>VA</stateCode><postalCode>20171</postalCode><countryCode>USA</countryCode></address>\n" +
         "            <nciInstituteCode>code</nciInstituteCode>\n" +
         "        </healthcareSite>\n" +
         "    </studyFundingSponsor>\n" +
         "    <studyCoordinatingCenter>\n" +
         "        <healthcareSite>\n" +
         "            <name>CALGB</name>\n" +
         "            <descriptionText>CALGB</descriptionText>\n" +
         "            <address><streetAddress>12359 sunrise valley drive</streetAddress><city>Reston</city><stateCode>VA</stateCode><postalCode>20191</postalCode><countryCode>USA</countryCode></address>\n" +
         "            <nciInstituteCode>code</nciInstituteCode>\n" +
         "        </healthcareSite>\n" +
         "    </studyCoordinatingCenter>\n" +
         "</study>\n";

	public CaXchangeRequestProcessorClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);
	}

	public CaXchangeRequestProcessorClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	   	initialize();
	}

	public CaXchangeRequestProcessorClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}

	public CaXchangeRequestProcessorClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
		initialize();
	}

	private void initialize() throws RemoteException {
	    this.portTypeMutex = new Object();
		this.portType = createPortType();
	}

	private CaXchangeRequestProcessorPortType createPortType() throws RemoteException {

		CaXchangeRequestProcessorServiceAddressingLocator locator = new CaXchangeRequestProcessorServiceAddressingLocator();
		// attempt to load our context sensitive wsdd file
		InputStream resourceAsStream = getClass().getResourceAsStream("client-config.wsdd");
		if (resourceAsStream != null) {
			// we found it, so tell axis to configure an engine to use it
			EngineConfiguration engineConfig = new FileProvider(resourceAsStream);
			// set the engine of the locator
			locator.setEngine(new AxisClient(engineConfig));
		}
		CaXchangeRequestProcessorPortType port = null;
		try {
			port = locator.getCaXchangeRequestProcessorPortTypePort(getEndpointReference());
		} catch (Exception e) {
			throw new RemoteException("Unable to locate portType:" + e.getMessage(), e);
		}

		return port;
	}

	public static void usage(){
		System.out.println(CaXchangeRequestProcessorClient.class.getName() + " -url <service url>");
	}

	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  CaXchangeRequestProcessorClient client = new CaXchangeRequestProcessorClient(args[1]);
			            Message requestMessage = new Message();
			            Metadata metaData = new Metadata();
			            metaData.setExternalIdentifier("myExternalIdentifier");
			            metaData.setMessageType("STUDY_CREATION");
			            Credentials creds = new Credentials();
			            metaData.setCredentials(creds);
			            requestMessage.setMetadata(metaData);
			            Request request = new Request();
			            MessagePayload mp= new MessagePayload();
                                    URI uri = new URI();
                                    uri.setPath("gme://ccts.cabig/1.0/gov.nih.nci.cabig.ccts.domain");
                                    mp.setXmlSchemaDefinition(uri);
                                    DocumentBuilder db= DocumentBuilderFactory.newInstance().newDocumentBuilder();
                                    Document document=db.parse(new InputSource(new StringReader(client.testPayLoad)));

			            MessageElement me = new MessageElement(document.getDocumentElement());

			            mp.set_any(new MessageElement[]{me});
			            request.setBusinessMessagePayload(mp);
			            requestMessage.setRequest(request);
			            CaXchangeResponseServiceReference crsr = client.processRequestAsynchronously(requestMessage);

                                    CaXchangeResponseServiceAddressingLocator locator = new CaXchangeResponseServiceAddressingLocator();
                                    CaXchangeResponseServicePortType respPort =locator.getCaXchangeResponseServicePortTypePort(crsr.getEndpointReference());
                                    int i=0;
                                    while(i==0) {
                                      System.out.println("Getting response");
                                      try {
                                        GetResponseResponse grr = respPort.getResponse(new GetResponseRequest());
                                        ResponseMessage rm = grr.getCaXchangeResponseMessage();
                                        if (rm!=null) {
                                            i=1;
                                            System.out.println(rm.getResponse().getResponseStatus());
                                         }else {
                                            Thread.sleep(500);
                                         }
								       }catch(Exception e) {
									   System.out.println("Error occurred getting response."+e.getMessage());
                                       }
								  }
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}

  public gov.nih.nci.cagrid.caxchange.context.stubs.types.CaXchangeResponseServiceReference processRequestAsynchronously(gov.nih.nci.caxchange.Message caXchangeRequestMessage) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"processRequestAsynchronously");
    gov.nih.nci.cagrid.caxchange.stubs.ProcessRequestAsynchronouslyRequest params = new gov.nih.nci.cagrid.caxchange.stubs.ProcessRequestAsynchronouslyRequest();
    gov.nih.nci.cagrid.caxchange.stubs.ProcessRequestAsynchronouslyRequestCaXchangeRequestMessage caXchangeRequestMessageContainer = new gov.nih.nci.cagrid.caxchange.stubs.ProcessRequestAsynchronouslyRequestCaXchangeRequestMessage();
    caXchangeRequestMessageContainer.setCaXchangeRequestMessage(caXchangeRequestMessage);
    params.setCaXchangeRequestMessage(caXchangeRequestMessageContainer);
    gov.nih.nci.cagrid.caxchange.stubs.ProcessRequestAsynchronouslyResponse boxedResult = portType.processRequestAsynchronously(params);
    return boxedResult.getCaXchangeResponseServiceReference();
    }
  }

}
