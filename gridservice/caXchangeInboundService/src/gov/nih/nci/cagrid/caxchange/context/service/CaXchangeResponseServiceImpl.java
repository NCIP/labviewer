package gov.nih.nci.cagrid.caxchange.context.service;

import gov.nih.nci.cagrid.caxchange.context.service.globus.resource.CaXchangeResponseServiceResource;
import gov.nih.nci.caxchange.ResponseMessage;

import java.rmi.RemoteException;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

/**
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 *
 * @created by Introduce Toolkit version 1.1
 *
 */
public class CaXchangeResponseServiceImpl extends CaXchangeResponseServiceImplBase {
	   static Logger logger = LogManager.getLogger(CaXchangeResponseServiceImpl.class);



	public CaXchangeResponseServiceImpl() throws RemoteException {
		super();
	}



  public gov.nih.nci.caxchange.ResponseMessage getResponse() throws RemoteException {
      try {
          gov.nih.nci.cagrid.caxchange.context.service.globus.resource.BaseResourceHome brh =getResourceHome();
          CaXchangeResponseServiceResource currentResource = brh.getAddressedResource();
          if (currentResource.getCaXchangeResponseMessageValue() == null) {
              RemoteException resoureNotReady = new RemoteException("CaXchange response not ready.");
              throw resoureNotReady;
          }
          ResponseMessage responseMessage = currentResource.getCaXchangeResponseMessageValue();
          return responseMessage;
      }
      catch (RemoteException re) {
          throw re;
      }
      catch (Exception e) {
         //TODO: Implement this autogenerated method
         logger.error("Error in getting response.", e);
          throw new RemoteException("Error getting response status ", e);
      }
  }

}

