<?xml version="1.0" encoding="ASCII"?>
<xs:schema xmlns:tns="urn:hl7-org:v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:hl7-org:v3" xmlns:mif="urn:hl7-org:v3/mif" targetNamespace="urn:hl7-org:v3" elementFormDefault="qualified">
	<!--xs:include schemaLocation="datatypes-base.xsd"/-->
	<xs:element name="document" type="Document"/>
	<xs:complexType name="Document">
		<xs:sequence>
			<xs:element name="id" type="II"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="II" type="II"/>
	<xs:complexType name="ANY" abstract="true"/>
	<xs:complexType name="II">
		<xs:complexContent>
			<xs:extension base="ANY">
				<xs:attribute name="root" type="uid" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A unique identifier that guarantees the global uniqueness
                     of the instance identifier. The root alone may be the
                     entire instance identifier.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="extension" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A character string as a unique identifier within the
                     scope of the identifier root.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="assigningAuthorityName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A human readable name or mnemonic for the assigning
                     authority. This name may be provided solely for the
                     convenience of unaided humans interpreting an  value
                     and can have no computational meaning. Note: no
                     automated processing must depend on the assigning
                     authority name to be present in any form.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayable" type="bl" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies if the identifier is intended for human
                     display and data entry (displayable = true) as
                     opposed to pure machine interoperation (displayable
                     = false).
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="uid">
		<xs:annotation>
			<xs:documentation>
            A unique identifier string is a character string which
            identifies an object in a globally unique and timeless
            manner. The allowable formats and values and procedures
            of this data type are strictly controlled by HL7. At this
            time, user-assigned identifiers may be certain character
            representations of ISO Object Identifiers ()
            and DCE
            Universally Unique Identifiers ().
            HL7 also reserves
            the right to assign other forms of UIDs (,
            such as mnemonic
            identifiers for code systems.
         </xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="oid uuid ruid"/>
	</xs:simpleType>
	<xs:simpleType name="oid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-2](\.(0|[1-9][0-9]*))*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="uuid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ruid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Za-z][A-Za-z0-9\-]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="st">
		<xs:annotation>
			<xs:documentation>
            The character string data type stands for text data,
            primarily intended for machine processing (e.g.,
            sorting, querying, indexing, etc.) Used for names,
            symbols, and formal expressions.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="bl">
		<xs:annotation>
			<xs:documentation>
            The Boolean type stands for the values of two-valued logic.
            A Boolean value can be either true or
            false, or, as any other value may be NULL.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:boolean">
			<xs:pattern value="true|false"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CD">
		<xs:annotation>
			<xs:documentation>
            A concept descriptor represents any kind of concept usually
            by giving a code defined in a code system.  A concept
            descriptor can contain the original text or phrase that
            served as the basis of the coding and one or more
            translations into different coding systems. A concept
            descriptor can also contain qualifiers to describe, e.g.,
            the concept of a "left foot" as a postcoordinated term built
            from the primary code "FOOT" and the qualifier "LEFT".
            In exceptional cases, the concept descriptor need not
            contain a code but only the original text describing
            that concept.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ANY">
				<xs:sequence>
					<xs:element name="originalText" type="ED" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        The text or phrase used as the basis for the coding.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="qualifier" type="CR" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                        Specifies additional codes that increase the
                        specificity of the primary code.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="translation" type="CD" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                        A set of other concept descriptors that translate
                        this concept descriptor into other code systems.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="code" type="cs" use="optional">
					<xs:annotation>
						<xs:documentation>
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystem" type="uid" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies the code system that defines the code.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A common name of the coding system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemVersion" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="cs">
		<xs:annotation>
			<xs:documentation>
            Coded data in its simplest form, consists of a code.
            The code system and code system version is fixed by 
            the context in which the  value occurs.  is used
            for coded attributes that have a single HL7-defined
            value set.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:pattern value="[^\s]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="ED" mixed="true">
		<xs:annotation>
			<xs:documentation>
            Data that is primarily intended for human interpretation
            or for further machine processing is outside the scope of
            HL7. This includes unformatted or formatted written language,
            multimedia data, or structured information as defined by a
            different standard (e.g., XML-signatures.)  Instead of the
            data itself, an ED may contain 
            only a reference (see TEL.) Note
            that the ST data type is a
            specialization of 
            when the  is text/plain.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent mixed="true">
			<xs:extension base="BIN">
				<xs:sequence>
					<xs:element name="reference" type="TEL" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        A telecommunication address (TEL), such as a URL
                        for HTTP or FTP, which will resolve to precisely
                        the same binary data that could as well have been
                        provided as inline data.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="thumbnail" type="thumbnail" minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="mediaType" type="cs" use="optional" default="text/plain">
					<xs:annotation>
						<xs:documentation>
                     Identifies the type of the encapsulated data and
                     identifies a method to interpret or render the data.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="language" type="cs" use="optional">
					<xs:annotation>
						<xs:documentation>
                     For character based information the language property
                     specifies the human language of the text.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="compression" type="CompressionAlgorithm" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Indicates whether the raw byte data is compressed,
                     and what compression algorithm was used.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="integrityCheck" type="bin" use="optional">
					<xs:annotation>
						<xs:documentation>
                     The integrity check is a short binary value representing
                     a cryptographically strong checksum that is calculated
                     over the binary data. The purpose of this property, when
                     communicated with a reference is for anyone to validate
                     later whether the reference still resolved to the same
                     data that the reference resolved to when the encapsulated
                     data value with reference was created.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="integrityCheckAlgorithm" type="IntegrityCheckAlgorithm" use="optional" default="SHA-1">
					<xs:annotation>
						<xs:documentation>
                     Specifies the algorithm used to compute the
                     integrityCheck value.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BIN" abstract="true" mixed="true">
		<xs:annotation>
			<xs:documentation>
            Binary data is a raw block of bits. Binary data is a
            protected type that MUST not be used outside the data
            type specification.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent mixed="true">
			<xs:extension base="ANY">
				<xs:attribute name="representation" type="BinaryDataEncoding" use="optional" default="TXT">
					<xs:annotation>
						<xs:documentation>
                     Specifies the representation of the binary data that
                     is the content of the binary data value.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CR">
		<xs:annotation>
			<xs:documentation>
            A concept qualifier code with optionally named role.
            Both qualifier role and value codes must be defined by
            the coding system.  For example, if SNOMED RT defines a
            concept "leg", a role relation "has-laterality", and
            another concept "left", the concept role relation allows
            to add the qualifier "has-laterality: left" to a primary
            code "leg" to construct the meaning "left leg".
         </xs:documentation>
			<xs:appinfo>
				<!--sch:pattern name="validate CR">
					<sch:rule abstract="true" id="rule-CR">
						<sch:report test="(value or @nullFlavor) and not(@nullFlavor and node())">
							<p xmlns:gsd="http://aurora.regenstrief.org/GenericXMLSchema" xmlns:xlink="http://www.w3.org/TR/WD-xlink">
                        A value component is required or else the
                        code role is NULL.
                     </p>
						</sch:report>
					</sch:rule>
				</sch:pattern-->
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ANY">
				<xs:sequence>
					<xs:element name="name" type="CV" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        Specifies the manner in which the concept role value
                        contributes to the meaning of a code phrase.  For
                        example, if SNOMED RT defines a concept "leg", a role
                        relation "has-laterality", and another concept "left",
                        the concept role relation allows to add the qualifier
                        "has-laterality: left" to a primary code "leg" to
                        construct the meaning "left leg".  In this example
                        "has-laterality" is .
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="value" type="CD" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        The concept that modifies the primary code of a code
                        phrase through the role relation.  For example, if
                        SNOMED RT defines a concept "leg", a role relation
                        "has-laterality", and another concept "left", the
                        concept role relation allows adding the qualifier
                        "has-laterality: left" to a primary code "leg" to
                        construct the meaning "left leg".  In this example
                        "left" is .
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="inverted" type="bn" use="optional" default="false">
					<xs:annotation>
						<xs:documentation>
                     Indicates if the sense of the role name is inverted.
                     This can be used in cases where the underlying code
                     system defines inversion but does not provide reciprocal
                     pairs of role names. By default, inverted is false.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="BinaryDataEncoding">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="B64"/>
			<xs:enumeration value="TXT"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="bin">
		<xs:annotation>
			<xs:documentation>
            Binary data is a raw block of bits. Binary data is a
            protected type that MUST not be used outside the data
            type specification.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:base64Binary"/>
	</xs:simpleType>
	<xs:complexType name="TEL">
		<xs:annotation>
			<xs:documentation>
            A telephone number (voice or fax), e-mail address, or
            other locator for a resource (information or service)
            mediated by telecommunication equipment. The address
            is specified as a URL
            qualified by time specification and use codes that help
            in deciding which address to use for a given time and
            purpose.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="URL">
				<xs:sequence>
					<xs:element name="useablePeriod" type="SXCM_TS" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                     Specifies the periods of time during which the
                     telecommunication address can be used.  For a
                     telephone number, this can indicate the time of day
                     in which the party can be reached on that telephone.
                     For a web address, it may specify a time range in
                     which the web content is promised to be available
                     under the given address.
                  </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="use" type="set_TelecommunicationAddressUse" use="optional">
					<xs:annotation>
						<xs:documentation>
                     One or more codes advising a system or user which
                     telecommunication address in a set of like addresses
                     to select for a given telecommunication need.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="URL" abstract="true">
		<xs:annotation>
			<xs:documentation>
            A telecommunications address  specified according to
            Internet standard RFC 1738
            [http://www.ietf.org/rfc/rfc1738.txt]. The
            URL specifies the protocol and the contact point defined
            by that protocol for the resource.  Notable uses of the
            telecommunication address data type are for telephone and
            telefax numbers, e-mail addresses, Hypertext references,
            FTP references, etc.
         </xs:documentation>
			<xs:appinfo>
				<!--sch:pattern name="validate URL">
					<sch:rule abstract="true" id="rule-URL">
						<sch:report test="(@nullFlavor or @value) and not(@nullFlavor and @value)"/>
					</sch:rule>
				</sch:pattern-->
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ANY">
				<xs:attribute name="value" type="url" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="url">
		<xs:annotation>
			<xs:documentation>
            A telecommunications address  specified according to
            Internet standard RFC 1738
            [http://www.ietf.org/rfc/rfc1738.txt]. The
            URL specifies the protocol and the contact point defined
            by that protocol for the resource.  Notable uses of the
            telecommunication address data type are for telephone and
            telefax numbers, e-mail addresses, Hypertext references,
            FTP references, etc.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:simpleType name="set_TelecommunicationAddressUse">
		<xs:list itemType="TelecommunicationAddressUse"/>
	</xs:simpleType>
	<xs:complexType name="SXCM_TS">
		<xs:complexContent>
			<xs:extension base="TS">
				<xs:attribute name="operator" type="SetOperator" use="optional" default="I">
					<xs:annotation>
						<xs:documentation>
                     A code specifying whether the set component is included
                     (union) or excluded (set-difference) from the set, or
                     other set operations with the current set component and
                     the set as constructed from the representation stream
                     up to the current point.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TS">
		<xs:annotation>
			<xs:documentation>
            A quantity specifying a point on the axis of natural time.
            A point in time is most often represented as a calendar
            expression.
         </xs:documentation>
			<xs:appinfo>
				<diff>PQ</diff>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QTY">
				<xs:attribute name="value" type="ts" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="QTY" abstract="true">
		<xs:annotation>
			<xs:documentation> is an abstract generalization
            for all data types (1) whose value set has an order
            relation (less-or-equal) and (2) where difference is
            defined in all of the data type's totally ordered value
            subsets.  The quantity type abstraction is needed in
            defining certain other types, such as the interval and
            the probability distribution.
         </xs:documentation>
			<xs:appinfo>
				<diff>QTY</diff>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ANY"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ts">
		<xs:annotation>
			<xs:documentation>
            A quantity specifying a point on the axis of natural time.
            A point in time is most often represented as a calendar
            expression.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{1,8}|([0-9]{9,14}|[0-9]{14,14}\.[0-9]+)([+\-][0-9]{1,4})?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="thumbnail" mixed="true">
		<xs:annotation>
			<xs:documentation>
                     A thumbnail is an abbreviated rendition of the full
                     data. A thumbnail requires significantly fewer
                     resources than the full data, while still maintaining
                     some distinctive similarity with the full data. A
                     thumbnail is typically used with by-reference
                     encapsulated data. It allows a user to select data
                     more efficiently before actually downloading through
                     the reference.
                  </xs:documentation>
		</xs:annotation>
		<xs:complexContent mixed="true">
			<xs:restriction base="ED">
				<xs:sequence>
					<xs:element name="reference" type="TEL" minOccurs="0"/>
					<xs:element name="thumbnail" type="thumbnail" minOccurs="0" maxOccurs="0"/>
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="bn">
		<xs:annotation>
			<xs:documentation>
            The BooleanNonNull type is used where a Boolean cannot
            have a null value. A Boolean value can be either
            true or false.
         </xs:documentation>
		</xs:annotation>
		<xs:restriction base="bl"/>
	</xs:simpleType>
	<xs:complexType name="CV">
		<xs:annotation>
			<xs:documentation>
            Coded data, consists of a code, display name, code system,
            and original text. Used when a single code value must be sent.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:restriction base="CE">
				<xs:sequence>
					<xs:element name="originalText" type="ED" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        The text or phrase used as the basis for the coding.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="translation" type="CD" minOccurs="0" maxOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="code" type="cs" use="optional">
					<xs:annotation>
						<xs:documentation>
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystem" type="uid" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies the code system that defines the code.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A common name of the coding system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemVersion" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CE">
		<xs:annotation>
			<xs:documentation>
            Coded data, consists of a coded value (CV)
            and, optionally, coded value(s) from other coding systems
            that identify the same concept. Used when alternative
            codes may exist.
         </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:restriction base="CD">
				<xs:sequence>
					<xs:element name="originalText" type="ED" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                        The text or phrase used as the basis for the coding.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="qualifier" type="CR" minOccurs="0" maxOccurs="0"/>
					<xs:element name="translation" type="CD" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                        A set of other concept descriptors that translate
                        this concept descriptor into other code systems.
                     </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="code" type="cs" use="optional">
					<xs:annotation>
						<xs:documentation>
                     The plain code symbol defined by the code system.
                     For example, "784.0" is the code symbol of the ICD-9
                     code "784.0" for headache.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystem" type="uid" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies the code system that defines the code.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A common name of the coding system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemVersion" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     If applicable, a version descriptor defined
                     specifically for the given code system.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A name or title for the code, under which the sending
                     system shows the code value to its users.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<!--    ******************   From voc.xs ******************    -->
	<xs:simpleType name="CompressionAlgorithm">
		<xs:annotation>
			<xs:documentation>vocSet: T10620 (C-0-T10620-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="cs">
			<xs:enumeration value="Z"/>
			<xs:enumeration value="DF"/>
			<xs:enumeration value="GZ"/>
			<xs:enumeration value="ZL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IntegrityCheckAlgorithm">
		<xs:annotation>
			<xs:documentation>vocSet: T17385 (C-0-T17385-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="cs">
			<xs:enumeration value="SHA-1"/>
			<xs:enumeration value="SHA-256"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TelecommunicationAddressUse">
		<xs:annotation>
			<xs:documentation>vocSet: T201 (C-0-T201-cpt)</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="AddressUse">
			<xs:simpleType>
				<xs:restriction base="cs">
					<xs:enumeration value="AS"/>
					<xs:enumeration value="EC"/>
					<xs:enumeration value="MC"/>
					<xs:enumeration value="PG"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="AddressUse">
		<xs:annotation>
			<xs:documentation>abstDomain: A190 (C-0-T201-A190-cpt)</xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="HomeAddressUse WorkPlaceAddressUse">
			<xs:simpleType>
				<xs:restriction base="cs">
					<xs:enumeration value="BAD"/>
					<xs:enumeration value="TMP"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:union>
	</xs:simpleType>
	<xs:simpleType name="HomeAddressUse">
		<xs:annotation>
			<xs:documentation>specDomain: S10628 (C-0-T201-A190-S10628-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="cs">
			<xs:enumeration value="H"/>
			<xs:enumeration value="HP"/>
			<xs:enumeration value="HV"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="WorkPlaceAddressUse">
		<xs:annotation>
			<xs:documentation>specDomain: S10631 (C-0-T201-A190-S10631-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="cs">
			<xs:enumeration value="WP"/>
			<xs:enumeration value="DIR"/>
			<xs:enumeration value="PUB"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SetOperator">
		<xs:annotation>
			<xs:documentation>vocSet: T17416 (C-0-T17416-cpt)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="cs">
			<xs:enumeration value="H"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="I"/>
			<xs:enumeration value="A"/>
			<xs:enumeration value="P"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
