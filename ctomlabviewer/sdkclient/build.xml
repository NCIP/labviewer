<?xml version="1.0" encoding="UTF-8"?>
<!-- ****************************************************************************************************-->
<!--                                     caCORE ToolKit Demo Build Script					                 -->
<!-- ****************************************************************************************************-->


<project name="caCORE SDK Thick Client Demo" default="rundemo" basedir=".">
	
	<property name="conf.dir" value="conf" />
	<property name="lib.dir" value="lib" />
	<property name="src.dir" value="." />
	<property name="test.classes.dir" value="classes" />
	<property name="junit.dir" value="junit" />

	<path id="classpath">
		<pathelement location="${src.dir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement path="${conf.dir}"/>
	</path>
		
	<macrodef name="SDKecho">
		<attribute name="message" default="..."/>
		<sequential>
			<echo>*****************************************************************</echo>
			<echo>***  @{message}</echo>
			<echo>*****************************************************************</echo>
		</sequential>
	</macrodef>	
	
	<!-- ************************************************************************************************-->
	<!--                                             Run Java Client Demo                                -->
	<!-- ************************************************************************************************-->

	<target name="rundemo">
		<javac srcdir="." >
			<include name="TestClient.java"/>
			<classpath refid="classpath"/>
			<classpath>
				<pathelement location="${src.dir}"/>
			</classpath>
		</javac>		
		<echo>${java.class.path}</echo>
		<java classname="TestClient" fork="true">
			<classpath refid="classpath"/>
			<sysproperty key="log4j.configuration"
									value="${conf.dir}/log4j.properties"/>
		</java>

	</target>
	
	<!-- ************************************************************************************************-->
	<!--                                Run JUnit Tests and Report                                       -->
	<!-- ************************************************************************************************-->

	<!-- 
	
	NOTE:  If you get the following error when executing 'ant runtest', you will need to add two jar files to the
	Ant home directory: Junit-4.1.jar, Ant-testutil.jar.  It is not enough to have these jar files in the junit
	task classpath!!!  
	
	If running ant tasks from within Eclipse, you need to find a copy of junit.jar, the code that does JUnit 
	 work, and tell Ant where it is. The easiest way to do this is to go to Window > Preferences, Ant > Runtime. 
	In the Classpath tab click on Global Entries and then Add External JARs.  Eclipse already has a copy of 
	JUnit, so in the dialog find your Eclipse plugins directory ([ECLIPSE_DIR]/plugins/) and go to the JUnit 
	plugin (presently org.junit_3.8.1) and select junit.jar. Now all of your Ant scripts should know how to 
	perform the <junit> Ant task.
		
	See also:
	
	http://www.laneyconsulting.com/web/blog.nsf/d6plinks/WKST-6PZNQM  and
	http://www.ryanlowe.ca/blog/archives/001038_junit_ant_task_doesnt_work_in_eclipse.php
	
	for more details.
	
	Here's the error message in question:

	Error Message:


	runtest:
	     [echo] *****************************************************************
	     [echo] ***  Running JUnit test
	     [echo] *****************************************************************

	BUILD FAILED
	C:\...\build.xml:59: Could not create task or type of type: junit.

	Ant could not find the task or a class this task relies upon.

	This is common and has a number of causes; the usual
	solutions are to read the manual pages then download and
	install needed JAR files, or fix the build file:
	 - You have misspelt 'junit'.
	   Fix: check your spelling.
	 - The task needs an external JAR file to execute
	     and this is not found at the right place in the classpath.
	   Fix: check the documentation for dependencies.
	   Fix: declare the task.
	 - The task is an Ant optional task and the JAR file and/or libraries
	     implementing the functionality were not found at the time you
	     yourself built your installation of Ant from the Ant sources.
	   Fix: Look in the ANT_HOME/lib for the 'ant-' JAR corresponding to the
	     task and make sure it contains more than merely a META-INF/MANIFEST.MF.
	     If all it contains is the manifest, then rebuild Ant with the needed
	     libraries present in ${ant.home}/lib/optional/ , or alternatively,
	     download a pre-built release version from apache.org
	 - The build file was written for a later version of Ant
	   Fix: upgrade to at least the latest release version of Ant
	 - The task is not an Ant core or optional task
	     and needs to be declared using <taskdef>.
	 - You are attempting to use a task defined using
	    <presetdef> or <macrodef> but have spelt wrong or not
	   defined it at the point of use

	Remember that for JAR files to be visible to Ant tasks implemented
	in ANT_HOME/lib, the files must be in the same directory or on the
	classpath

	Please neither file bug reports on this problem, nor email the
	Ant mailing lists, until all of these causes have been explored,
	as this is not an Ant bug.
	
	-->

	<target name="runtest">
		<SDKecho message="Running JUnit test"/>
		<mkdir dir="${junit.dir}"/>

		<junit printsummary="yes" fork="yes" maxmemory="512m" showoutput="true">
			<classpath>
				<path refid="classpath"/>
			</classpath>
			
			<formatter type="xml"/>			
			<sysproperty key="log4j.configuration"
						value="${conf.dir}/log4j.properties"/>
			
			<!-- Sample single test
			
			<test name="gov.nih.nci.cabio.domain.impl.test.GeneTest" todir="${junit.dir}" />
			<test name="gov.nih.nci.cabio.domain.impl.test.CloneTest" todir="${junit.dir}" />
			
			 -->
			
			<batchtest haltonfailure="no" todir="${junit.dir}">
				<fileset dir="${test.classes.dir}">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>			
		</junit>
		
		
		<SDKecho message="Generating JUnit HTML Reports" />
		<junitreport todir="${junit.dir}">
			<fileset dir="${junit.dir}" includes="TEST-*.xml" />
			<report format="frames" todir="${junit.dir}" />
		</junitreport>	
		<SDKecho message="Refer to index.html in the ${junit.dir} directory for results" />		
	</target>
	
</project>