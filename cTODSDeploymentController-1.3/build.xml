<project name="cTomLabViewer" default="build_zip" basedir=".">
	<property file="build-download.properties" />
	<property environment="env" />
     <property name="software.dir" value=".."/>

     <!-- ******************************************************************* -->
	 <!-- **           DISTRIBUTION ZIP TARGET	                           ** -->
	  <!-- ******************************************************************* -->
	<!--
	TARGET: Zip
		Zip the source code for cTomDataPersistence, cTomLabViewer,  LabLoader, RegistrationConsumerService, StudyConsumerService, StudyService
	-->

	<target name="build_zip">
        <mkdir dir="${temp.dir}" />
        <echo message="from build-zip: ${temp.dir}"/>
        <zip destfile="${temp.dir}/${module.name}.zip">
			<zipfileset dir="${artifacts.dir}" prefix="artifacts" />
			<zipfileset dir="${ctomdeploymentcontroller.dir}" prefix="cTODSDeploymentController" />
			<zipfileset dir="${ctomdatapersistence.dir}" prefix="CTOMDataPersistence">
					<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${ctomlabviewer.dir}" prefix="cTODSLabViewer">
				<exclude name="**/build/**" />
			</zipfileset>
			<zipfileset dir="${labLoader.dir}" prefix="LabLoader">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${regConsumerService.dir}" prefix="RegistrationConsumerService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${studyconsumerservice.dir}" prefix="StudyConsumerService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${studyService.dir}" prefix="StudyService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${ddl.dir}" prefix="DDL" />
		</zip>
	</target>

	
	 <!-- ******************************************************************* -->
	 <!-- ** Building the ctom-wsrf.war and ctodslabviewer war             ** -->
     <!-- ******************************************************************* -->

	<!-- Unzips the build download file -->

	<!-- Builds the cTOM-wsrf war file -->
	<target name="pre-stage" description="Builds the cTOM-wsrf war file">

		<echo>Pre stage  Registration Service: ${unZip.dir} </echo>
        <echo>Dest Dir is: ${dest.dir} </echo>
        <ant antfile="${regConsumerService.dir}/build-ctms.xml"  dir="${regConsumerService.dir}" target="deploySkeletonService" inheritall="true"/>

        <echo>Pre stage  StudyConsumer Service </echo>
        <ant antfile="${studyconsumerservice.dir}/build-ctms.xml"  dir="${studyconsumerservice.dir}" target="deploySkeletonService" inheritall="true"/>

        <echo>Pre stage  Study Service </echo>
        <ant antfile="${studyservice.dir}/build-ctms.xml"  dir="${studyservice.dir}" target="deploySkeletonService" inheritall="true"/>

		<echo>Pre stage  Lab Loader Service </echo>
        <ant antfile="${labLoader.dir}/build-ctms.xml" dir="${labLoader.dir}" target="deploySkeletonService" inheritall="true"/>

	</target>

	<!-- Builds the staging directory -->
	
	<target name="build-stage" depends="pre-stage" description="">
		<echo>Building  stage temp directory</echo>
		<mkdir dir="${stage.dir}" />
		<unzip dest="${stage.dir}" overwrite="true">

            <fileset dir="${regConsumerService.dir}/build/">
                <include name="*.zip" />
            </fileset>
            <fileset dir="${studyconsumerservice.dir}/build/">
                <include name="*.zip" />
            </fileset>
            <fileset dir="${studyservice.dir}/build/">
                <include name="*.zip" />
            </fileset>

            <fileset dir="${labLoader.dir}/build/">
				<include name="*.zip" />
			</fileset>
        </unzip>

        <move todir="${webapps.dir}">
			<fileset dir="${stage.dir}/webapps/wsrf"/>
		</move>
		<mkdir dir="${webapps.dir}/share/schema/core" />
		<mkdir dir="${webapps.dir}/share/schema/resolutionService" />
		<mkdir dir="${webapps.dir}/share/schema/transferService" />
		<mkdir dir="${webapps.dir}/share/schema/ws" />
		<mkdir dir="${webapps.dir}/share/schema/wsrf" />

		<copy todir="${webapps.dir}/share/schema/core">
			<fileset dir="wsrf-folder/core" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/resolutionService">
			<fileset dir="wsrf-folder/resolutionService" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/transferService">
			<fileset dir="wsrf-folder/transferService" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/ws">
			<fileset dir="wsrf-folder/ws" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/wsrf">
			<fileset dir="wsrf-folder/wsrf" />
		</copy>
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_resolution_service" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_resolution_test" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_transfer_service" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_common" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_registry" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_authzService" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_counter" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_mgmt" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_interop" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_unit" />

		<copy todir="${webapps.dir}/WEB-INF/etc/globus_resolution_service">
			<fileset dir="wsrf-folder/globus_resolution_service" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_resolution_test">
			<fileset dir="wsrf-folder/globus_resolution_test" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_transfer_service">
			<fileset dir="wsrf-folder/globus_transfer_service" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_common">
			<fileset dir="wsrf-folder/globus_wsrf_common" />
		</copy>
        <copy file="${ctomdeploymentcontroller.dir}/resources/global_security_descriptor_template.xml"
			  toFile="${webapps.dir}/WEB-INF/etc/globus_wsrf_core/global_security_descriptor.xml" overwrite="true" filtering="true">
		</copy>

        <copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core">
			<fileset dir="wsrf-folder/globus_wsrf_core" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_registry">
			<fileset dir="wsrf-folder/globus_wsrf_core_registry" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_authzService">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_authzService" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_counter">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_counter" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_mgmt">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_mgmt" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_interop">
			<fileset dir="wsrf-folder/globus_wsrf_test_interop" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_unit">
			<fileset dir="wsrf-folder/globus_wsrf_test_unit" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc">
			<fileset dir="wsrf-folder">
				<include name="globus*.*" />
			</fileset>
		</copy>

		<copy todir="${webapps.dir}/WEB-INF">
			<fileset dir="wsrf-folder">
				<include name="web.xml" />
			</fileset>
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/lib">
			<fileset dir="wsrf-folder/lib-files">
				<include name="*.*" />
			</fileset>
		</copy>
		<mkdir dir="${webapps.dir}/WEB-INF/attachments" />
		<mkdir dir="${webapps.dir}/WEB-INF/classes" />
		<copy todir="${webapps.dir}/WEB-INF/classes">
			<fileset dir="wsrf-folder/classes" />
		</copy>


		<copy file="${software.dir}/labviewer-web/src/resources/applicationContext.xml.template" 
			  toFile="${webapps.dir}/WEB-INF/classes/applicationContext.xml" filtering="true" overwrite="true">
		</copy>
	</target>

	<!-- Builds the cTOM-wsrf -->
	
	<target name="build-ctom-wsrf" depends="build-stage" description="Builds the ctom wsrf">
		<echo>Building deployable WAR file ...</echo>
		<mkdir dir="${war-dist.dir}" />
		<war destfile="${war-dist.dir}/wsrf-ctods.war" basedir="${webapps.dir}" update="true" webxml="${webapps.dir}/WEB-INF/web.xml" />
        <copy file="${war-dist.dir}/wsrf-ctods.war" toDir="${artifacts.dir}/../wsrf-ctods" overwrite="true"/>
    </target>


	<!-- Builds the cTOMDataPersistence jar file -->
	
	<target name="build-db-jars" description="Builds the database jars">
		<echo>Creating cTOMPersistence jar</echo>
		<ant antfile="${unZip.dir}/CTOMDataPersistence/build.xml" dir="${unZip.dir}/CTOMDataPersistence" target="dist" inheritall="true" />
	</target>
	
</project>
