<?xml version="1.0"?>
<project name="build-deploy file" basedir="." default="deploy">
	<!-- ============================================================== -->
	<!-- MASTER DEPLOY FILE DO NOT EDIT OR INTRODUCE MAY OVERWRITE      -->
	<!-- In order to customize the deployment process please edit the   -->
	<!-- dev-build-deploy.xml                                           -->
	<!-- ============================================================== -->

	<!-- Filesets -->
	<!-- JARs to be included in the GAR file -->
	<fileset dir="${build.lib.dir}" id="garjars" />
	<property name="garjars.id" value="garjars" />

	<!-- Schema files (WSDL, XSD, etc.) to be included in the GAR file -->
	<fileset dir="${schema.dest}" id="garschema">
		<include name="${schema.path}/**/*" />
	</fileset>
	<property name="garschema.id" value="garschema" />

	<!-- Configuration files (security, etc.) to be included in the GAR file -->
	<property name="garetc.id" value="garetc" />
	<fileset dir="tmp/etc" id="garetc" />
	
	
	<property name="tomcat.dir" value="${env.CATALINA_HOME}" />
	
	<property name="jboss.dir" value="${env.JBOSS_HOME}" />

	<target name="deploymentValidator"  unless="no.deployment.validation" depends="defineClasspaths">
		<taskdef name="deploymentValidatorTask" classname="gov.nih.nci.cagrid.introduce.servicetasks.deployment.validator.DeploymentValidatorTask" classpathref="tasks.run.classpath">
		</taskdef>
		<deploymentValidatorTask />
	</target>
	
	
	<target name="setDeploymentProperties">
		<property file="deploy.properties" />
		<property name="globus.webapp" value="wsrf" />
		<property name="service.deployment.path" value="${service.deployment.prefix}/${introduce.skeleton.service.name}" />
		<pathconvert dirsep="_" property="service.deployment.dir.name">
			<path>
				<pathelement path="${service.deployment.path}" />
			</path>
			<map from="${basedir}\" to="" />
			<map from="${basedir}/" to="" />
		</pathconvert>
		<property name="gar.name" value="${service.deployment.dir.name}.gar" />

		<property name="service.properties.file" value="service.properties" />
	</target>

	<target name="prepareDeploymentTmp" depends="checkGlobus,init">

		<copy overwrite="true" todir="${build.lib.dir}">
			<fileset dir="${basedir}/lib">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy overwrite="true" todir="tmp" file="server-config.wsdd" />
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/server-config.wsdd" value="${introduce.skeleton.service.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/server-config.wsdd" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/server-config.wsdd" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<!-- prepare the jndi file -->
		<copy overwrite="true" todir="tmp" filtering="true" file="jndi-config.xml">
			<filterset>
				<filtersfile file="${service.properties.file}" />
			</filterset>
		</copy>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/jndi-config.xml" value="${introduce.skeleton.service.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/jndi-config.xml" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/jndi-config.xml" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<replace file="tmp/jndi-config.xml" value="${perform.index.service.registration}" token="PERFORM_REGISTRATION" />
		<mkdir dir="tmp/etc" />
		<copy overwrite="true" toDir="tmp/etc">
			<fileset dir="etc">
				<include name="**/*" />
			</fileset>
		</copy>
		<replace dir="tmp/etc/" value="defaultvalue">
			<include name="*_registration.xml" />
			<replacefilter token="INDEX_SERVICE_URL" value="${index.service.url}" />
			<replacefilter token="REGISTRATION_REFRESH" value="${index.service.registration.refresh_seconds}" />
			<replacefilter token="INDEX_REFRESH" value="${index.service.index.refresh_milliseconds}" />
		</replace>
		
		<taskdef name="createDeploymentFile" classname="gov.nih.nci.cagrid.introduce.servicetasks.deployment.DeploymentFileGeneratorTask" classpathref="tasks.run.classpath" />
		
	</target>


	<!-- deploy service to tomcat -->
	<target name="deployTomcat" depends="all,deploymentValidator,setDeploymentProperties" description="Deploys to CATALINA_HOME (to set the services properties file set the ant command line variable -Dservice.properties.file)">
		<echo message="Deploying service ${service.deployment.path} under Tomcat at ${tomcat.dir}" />

		<property name="webapp.deploy.dir" value="${tomcat.dir}/webapps/${globus.webapp}" />
		<property name="webapp.deploy.lib.dir" value="${webapp.deploy.dir}/WEB-INF/lib" />
		<property name="webapp.deploy.schema.dir" value="${webapp.deploy.dir}/share/schema" />
		<property name="webapp.deploy.etc.dir" value="${webapp.deploy.dir}/WEB-INF/etc/" />

		<echo message="Deploying service ${service.deployment.path} under Tomcat at ${webapp.deploy.dir}" />

		<property name="service.deployment.dir" value="${webapp.deploy.etc.dir}/${service.deployment.dir.name}" />
		<!-- prepare the deployment directory -->
		<mkdir dir="${service.deployment.dir}" />
		<!-- prepare the server-config file -->

		<mkdir dir="tmp" />

		<runtarget target="preDeployTomcat" />
		<runtarget target="deployWebApp" />
	</target>

	<!-- deploy service to jboss -->
	<target name="deployJBoss" depends="all,deploymentValidator,setDeploymentProperties" description="Deploys to JBOSS_HOME (to set the services properties file set the ant command line variable -Dservice.properties.file)">

		<property name="webapp.deploy.dir" value="${jboss.dir}/server/default/deploy/${globus.webapp}.war" />
		<property name="webapp.deploy.lib.dir" value="${webapp.deploy.dir}/WEB-INF/lib" />
		<property name="webapp.deploy.schema.dir" value="${webapp.deploy.dir}/share/schema" />
        <property name="webapp.deploy.etc.dir" value="${webapp.deploy.dir}/WEB-INF/etc" />
		
		<echo message="Deploying service ${service.deployment.path} under JBoss at ${webapp.deploy.dir}" />

		<property name="service.deployment.dir" value="${webapp.deploy.etc.dir}/${service.deployment.dir.name}" />
		<!-- prepare the deployment directory -->
		<mkdir dir="${service.deployment.dir}" />
		<!-- prepare the server-config file -->

		<mkdir dir="tmp" />

		<runtarget target="preDeployJBoss" />
		<runtarget target="deployWebApp" />
	</target>




	<target name="deployWebApp" depends="setDeploymentProperties">

		<runtarget target="prepareDeploymentTmp" />

		<createDeploymentFile/>

		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="server-config.wsdd" />
			</fileset>
		</copy>

		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="jndi-config.xml" />
			</fileset>
		</copy>
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp/etc">
				<include name="**/*" />
			</fileset>
		</copy>

		<delete dir="tmp" />


		<!--copy over the jars to the lib -->
		<copy overwrite="true" toDir="${webapp.deploy.lib.dir}">
			<fileset dir="lib">
				<include name="*" />
			</fileset>
			<fileset dir="${build.lib.dir}">
				<include name="*" />
			</fileset>
		</copy>
		<!--copy over the schema service files-->
		<copy overwrite="true" toDir="${webapp.deploy.schema.dir}/${introduce.skeleton.service.name}">
			<fileset dir="build/schema/${introduce.skeleton.service.name}">
				<include name="**\*" />
			</fileset>
		</copy>
	</target>

	<!-- make deployment configured gar -->
	<target name="createDeploymentGar" depends="setDeploymentProperties" description="creates a gar file that can be deployed or moved around">

		<!-- prepare the server-config file -->
		<mkdir dir="tmp" />

		<echo message="Creating a gar for service ${gar.name}" />

		<runtarget target="preDeployGlobus" />

		<runtarget target="prepareDeploymentTmp" />
		<createDeploymentFile/>

		<!-- make the gar file -->
		<ant antfile="${build.packages}" target="makeGar">
			<property name="garserverdeployment.file" value="${basedir}/tmp/server-config.wsdd" />
			<property name="garjndiconfigdeployment.file" value="${basedir}/tmp/jndi-config.xml" />
			<property name="garclientdeployment.file" value="${basedir}/client-config.wsdd" />
			<property name="garclientserverdeployment.file" value="${basedir}/client-server.wsdd" />
			<reference refid="${garjars.id}" />
			<reference refid="${garschema.id}" />
			<reference refid="${garetc.id}" />
		</ant>
		<delete dir="tmp" />
	</target>


	<!-- deploy a gar to globus -->
	<target name="deployGlobus" depends="all, createDeploymentGar, deploymentValidator" description="Deploys a gar to GLOBUS_LOCATION (to set the services properties file set the ant command line variable -Dservice.properties.file)">

		<echo message="Deploying server to Globus Container" />

		<java classname="org.globus.bootstrap.AntBootstrap" fork="yes" failonerror="true">
			<jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
			<jvmarg value="-Djava.endorsed.dirs=${ext.globus.dir}/endorsed" />
			<sysproperty key="GLOBUS_LOCATION" value="${ext.globus.dir}" />
			<sysproperty key="ANT_HOME" value="${ant.home}" />
			<arg value="org.globus.tools.gar.DeployGar" />
			<arg value="${gar.name}" />
			<classpath>
				<fileset dir="${ext.globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${ant.library.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>

		<delete dir="${gar.name}" />
		<!-- deploy the gar -->
	</target>
	
	
	<target name="undeployGlobus" depends="checkGlobus,setDeploymentProperties" description="undeploy a service from a globus container (to set the services properties file set the ant command line variable -Dservice.properties.file)">
		
		<property name="webapp.deploy.dir" value="${ext.globus.dir}" />
		<property name="webapp.deploy.lib.dir" value="${webapp.deploy.dir}/lib" />
		<property name="webapp.deploy.schema.dir" value="${webapp.deploy.dir}/share/schema" />
		<property name="webapp.deploy.etc.dir" value="${webapp.deploy.dir}/etc" />

		<echo message="Undeploying service ${service.deployment.path} under Globus at ${webapp.deploy.dir}" />

		<property name="service.deployment.dir" value="${webapp.deploy.etc.dir}/${service.deployment.dir.name}" />
		
		<taskdef name="undeployTool" classname="gov.nih.nci.cagrid.introduce.servicetasks.undeployment.UndeployServiceTask" classpathref="tasks.run.classpath" />
		<undeployTool/>	
		<runtarget target="postUndeployGlobus" />
	</target>
	
	<target name="undeployTomcat" depends="checkGlobus,setDeploymentProperties" description="undeploy a service from a tomcat container (to set the services properties file set the ant command line variable -Dservice.properties.file)">
		
		<property name="webapp.deploy.dir" value="${tomcat.dir}/webapps/${globus.webapp}" />
		<property name="webapp.deploy.lib.dir" value="${webapp.deploy.dir}/WEB-INF/lib" />
		<property name="webapp.deploy.schema.dir" value="${webapp.deploy.dir}/share/schema" />
		<property name="webapp.deploy.etc.dir" value="${webapp.deploy.dir}/WEB-INF/etc" />

		<echo message="Undeploying service ${service.deployment.path} under Tomcat at ${webapp.deploy.dir}" />

		<property name="service.deployment.dir" value="${webapp.deploy.etc.dir}/${service.deployment.dir.name}" />
		
		<taskdef name="undeployTool" classname="gov.nih.nci.cagrid.introduce.servicetasks.undeployment.UndeployServiceTask" classpathref="tasks.run.classpath" />
		<undeployTool/>	
		<runtarget target="postUndeployTomcat" />
	</target>

	<target name="undeployJBoss" depends="checkGlobus,setDeploymentProperties" description="undeploy a service from a jboss container (to set the services properties file set the ant command line variable -Dservice.properties.file)">

		<property name="webapp.deploy.dir" value="${jboss.dir}/server/default/deploy/${globus.webapp}.war" />
		<property name="webapp.deploy.lib.dir" value="${webapp.deploy.dir}/WEB-INF/lib" />
		<property name="webapp.deploy.schema.dir" value="${webapp.deploy.dir}/share/schema" />
		<property name="webapp.deploy.etc.dir" value="${webapp.deploy.dir}/WEB-INF/etc" />

		<echo message="Undeploying service ${service.deployment.path} under JBoss at ${webapp.deploy.dir}" />

		<property name="service.deployment.dir" value="${webapp.deploy.etc.dir}/${service.deployment.dir.name}" />
		
		<taskdef name="undeployTool" classname="gov.nih.nci.cagrid.introduce.servicetasks.undeployment.UndeployServiceTask" classpathref="tasks.run.classpath" />
		<undeployTool/>		
		<runtarget target="postUndeployJBoss" />
	</target>
	
</project>
