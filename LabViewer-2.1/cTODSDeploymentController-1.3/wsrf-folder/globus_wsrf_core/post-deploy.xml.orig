<?xml version="1.0"?>

<!-- ===================================================================

Notes:
   This is a build file for use with the Jakarta Ant build tool.

Prerequisites:

   jakarta-ant from http://jakarta.apache.org


Build Instructions:

   This file is automatically called at the end of the deployment
   of the corresponding component's gar (see build-packages.xml).

Copyright:
Copyright (c) 1999 University of Chicago and The University of
Southern California. All Rights Reserved.

==================================================================== -->
<project default="all" basedir=".">

    <property environment="env"/>
    
    <property file="build.properties"/>
    <property file="${user.home}/build.properties"/>
    
    <property name="env.GLOBUS_LOCATION" value="."/>
    <property name="deploy.dir" location="${env.GLOBUS_LOCATION}"/>
    <property name="abs.deploy.dir" location="${deploy.dir}"/>
    <property name="build.launcher" 
        location="${abs.deploy.dir}/share/globus_wsrf_common/build-launcher.xml"/>

    <target name="setup" depends="setCredentialLocationUnix, setCredentialLocationWindows, setupContainerDescriptor">

        <move file="${abs.deploy.dir}/etc/${gar.id}/log4j.properties" 
              todir="${abs.deploy.dir}"
              failonerror="false"/>

        <move file="${abs.deploy.dir}/etc/${gar.id}/container-log4j.properties" 
              todir="${abs.deploy.dir}"
              failonerror="false"/>

        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="globus-start-container"/>
            <property name="class.name" 
                value="org.globus.wsrf.container.ServiceContainer"/>
            <property name="default.jvm.options"
                value="-Dlog4j.configuration=container-log4j.properties"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="globus-stop-container"/>
            <property name="class.name" 
                value="org.globus.wsrf.container.ShutdownClient"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-destroy"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.Destroy"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-set-termination-time"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.SetTerminationTime"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-get-property"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.GetProperty"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-get-properties"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.GetProperties"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-query"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.Query"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-insert-property"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.InsertProperty"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-update-property"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.UpdateProperty"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsrf-delete-property"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.DeleteProperty"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsn-subscribe"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.Subscribe"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsn-pause-subscription"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.Pause"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsn-resume-subscription"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.Resume"/>
        </ant>
        <ant antfile="${build.launcher}" 
             target="generateLauncher">
            <property name="launcher-name" value="wsn-get-current-message"/>
            <property name="class.name" 
                value="org.globus.wsrf.client.GetCurrentMessage"/>
        </ant>
    </target>

    <target name="testPlatform">
        <condition property="is.unix">
            <os family="unix"/>
        </condition>
        <condition property="is.windows">
            <os family="windows"/>
        </condition>
    </target>

    <target name="setCredentialLocationUnix" depends="testPlatform" if="is.unix">
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@CERT_FILE@" 
            value="/etc/grid-security/containercert.pem"/>
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@KEY_FILE@" 
            value="/etc/grid-security/containerkey.pem"/>        
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@GRIDMAP_FILE@" 
            value="/etc/grid-security/grid-mapfile"/>        
    </target>


    <target name="setCredentialLocationWindows" depends="testPlatform" if="is.windows">
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@CERT_FILE@" 
            value="${abs.deploy.dir}/etc/containercert.pem"/>
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@KEY_FILE@" 
            value="${abs.deploy.dir}/etc/containerkey.pem"/> 
        <replace 
            file="${abs.deploy.dir}/etc/${gar.id}/global_security_descriptor.xml" 
            token="@GRIDMAP_FILE@" 
            value="${abs.deploy.dir}/etc/grid-security/grid-mapfile"/>               
    </target>

    <target name="setupContainerDescriptor" if="enable.container.desc">
        <replace file="${abs.deploy.dir}/etc/${gar.id}/server-config.wsdd">
            <replacetoken><![CDATA[<!-- @CONTAINER_SECURITY_DESCRIPTOR@ -->]]></replacetoken>
            <replacevalue><![CDATA[<parameter 
            name="containerSecDesc" 
            value="etc/globus_wsrf_core/global_security_descriptor.xml"/>]]></replacevalue>
        </replace>

    </target>
        
</project>
