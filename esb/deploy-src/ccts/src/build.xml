<?xml version="1.0" encoding="iso-8859-1"?> 

<project name="caXchange-Installer" default="version-check" >
		<description>
        This ant script contains the caXchange installation,deployment and database schema creation tasks.
        </description>

	 <!-- PROPERTIES -->
	 <property environment="env" />
	 <property file="install.properties"/>
	 <property name="cax.home" value="." />
	 <property name="tom.home" value="${env.CATALINA_HOME}" />
	 <property name="lib.dir" value="${cax.home}/lib"/>
	 <property name="temp.dir" value="${cax.home}/temp" />
	 <property name="log.dir" value="${cax.home}/logs" />
	 <property name="tomcat.prop" value="${cax.home}/conf/tomcat" />	
	
	<!--Validates the CATALINA_HOME and JDK version-->
	<target name="assert"  description="Uses ant to detect current jdk version and validates CATALINA_HOME is set">
	<fail message="Not running ant with JDK 1.5 - this will result in differing class versions">
      <condition>
        <not>
          <equals arg1="${ant.java.version}" arg2="1.5" />
        </not>
      </condition>
    </fail>
	<fail unless="env.CATALINA_HOME" message="CATALINA_HOME environment variable  has not been set!"/>
	</target>

	
	
	<target name="version-check" depends="system-init,assert" description="checks the software version used in your system">
		<echo message="###########################################"/>
		<echo message="#Welcome To caxchange  Installation       #"/>
		<echo message="###########################################"/>
		<echo message="Current Setup: "/>
                <echo message="JDK Version       : ${java.version}"/>
		<echo message="ANT Version       : ${ant.version}"/>
		<echo message="caGRID Version    : ${CAGRID_VERSION}"/>
		<echo message="Tomcat Version    : ${TOMCAT_VERSION}"/>
		<echo message="MySql Version     : ${MYSQL_VERSION}"/>
		<echo message="Operating System  : ${os.name}"/>
		<echo message="JAVA_HOME is      : ${env.JAVA_HOME}"/>
		<echo message="ANT_HOME is       : ${env.ANT_HOME}"/>
		<echo message="CATALINA_HOME is  : ${env.CATALINA_HOME}"/>		
		<echo message="Type ant -p for targets available"/>
    </target>
	
	
	<!--Get current timestamp for the log creation-->
	<tstamp>
		<format property="touch.time" pattern="yyyy-MM-dd-HH-mm" />
	</tstamp>

	<!--Initializes the logs-->
	<target name="system-init" description="Creates the temp and the log directory">
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${log.dir}" />
		<record name="${log.dir}/install-${touch.time}.log" action="start"/>
	</target>
	
	<!--Clens the templorary files and folder created by the different targets-->
    <target name="clean" description="clean temp files folders and targets" >
		
		<delete includeemptydirs="true">
			<fileset dir="${cax.home}/temp/" includes="**/*"/>
		</delete>

    </target>
    
    
    <target name="servicemix-install" description="Unix/window">
    <condition property="isUnix">
	    <and>
		    <os family="unix"/>
		
	    </and>
    </condition>
    <antcall target="servicemix-install-unix"/>
	   
    
    <condition property="isWin">
	    <not>
		    <os family="unix"/>
		    
	    </not>
    </condition>
    <antcall target="servicemix-install-win"/>
</target>


	<!--Installs the servicemix from apache site and unzip to location given in install.properties file-->
	<target name="servicemix-install-unix" depends="assert,system-init,clean" description="download servicemix" if="isUnix">
		
		
		
        <echo message="You current SERVICEMIX_HOME in property file :${SERVICEMIX_HOME}  for Unix" />
            <input   message="Do you want to install Servicemix at this location:"
		validargs="y,n"
		addproperty="ifyes"/>
		<condition property="ifno">
		<equals arg1="n" arg2="${ifyes}"/>
		</condition>
		<fail if="ifno">Please set the new servicemix location that you have already installed and run script again</fail>
       
		<!--<echo message="Setting environment variable to ${SERVICEMIX_HOME}"/>-->
		<mkdir dir="${SERVICEMIX_HOME}"/>
		<get src="${SMX_URL}" dest="${SERVICEMIX_HOME}/apache-servicemix-3.3.zip"
		 verbose="true"
		 usetimestamp="true"/>		
		 <unzip src="${SERVICEMIX_HOME}/apache-servicemix-3.3.zip" dest="${SERVICEMIX_HOME}" overwrite="false"/>	
		 <chmod dir="${SERVICEMIX_HOME}/apache-servicemix-3.3/bin/servicemix" perm="755"  />
		
	</target>
	
	<target name="servicemix-install-win" depends="assert,system-init,clean" description="download servicemix" if="isWin">
		
		
		
		<echo message="You current SERVICEMIX_HOME in property file :${SERVICEMIX_HOME}  for Windows"/>
		<input   message="Do you want to install Servicemix at this location:"
			 validargs="y,n"
			 addproperty="ifyes"/>
		<condition property="ifno">
			<equals arg1="n" arg2="${ifyes}"/>
		</condition>
		<fail if="ifno">Please set the new servicemix location that you have already installed and run script again</fail>
		
		<!--<echo message="Setting environment variable to ${SERVICEMIX_HOME}"/>-->
		<mkdir dir="${SERVICEMIX_HOME}"/>
		<get src="${SMX_URL}" dest="${SERVICEMIX_HOME}/apache-servicemix-3.3.zip"
		     verbose="true"
		     usetimestamp="true"/>		
		<unzip src="${SERVICEMIX_HOME}/apache-servicemix-3.3.zip" dest="${SERVICEMIX_HOME}" overwrite="false"/>
		
	</target>

	
	<!-- COMMENTED OUT BECAUSE NOT NEEDED IN SERVICEMIX 3.3
	<target name="servicemix-components-install" depends="assert,system-init" description="install servicemix components used for caxchange">
		 <copy file="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-bean-2008.01-installer.zip"
		 tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-bean-2008.01-installer.zip"/>
		  <copy file="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-jms-2008.01-installer.zip"
		 tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-jms-2008.01-installer.zip"/>
		  <copy file="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-shared-2008.01-installer.zip"
		 tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-shared-2008.01-installer.zip"/>
		 <copy file="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-http-2008.01-installer.zip"
		 tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-http-2008.01-installer.zip"/>		 
	</target>
	-->

	<target name="configure-caxchange-properties" depends="assert,system-init" description="Copy and update the caxchange.properties file based on the setup in install.properties" >
	        <copy file="${cax.home}/conf/servicemix/caxchange.properties" tofile="${cax.home}/temp/caxchange.properties" />
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE@" property="caxchangedb1_name"/>
		</replace>
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE_PORT@" property="caxchangedb_port"/>
		</replace>
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="$@CAXCHANGE_DATABASE_HOST@" property="caxchangedb_host"/>
		</replace>
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE_USERNAME@" property="caxchangedb_username"/>
		</replace>
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE_PASSWORD@" property="caxchangedb_password"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_HOST@" property="amq_host"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_PORT@" property="amq_port"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CERTIFICATE_PATH@" property="delegation_certificateFilePath"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@KEY_PATH@" property="delegation_keyFilePath"/>
		</replace>



		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CTOM_REGISTRATION_URL@" property="ctom_registration_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CTOM_REGISTRATIONROLLBACK_URL@" property="ctom_registrationRollback_url"/>
		</replace>


		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CTOM_STUDY_URL@" property="ctom_study_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CTOM_STUDYROLLBACK_URL@" property="ctom_studyRollback_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CTOM_LABLOADER_URL@" property="ctom_labLoader_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@PSC_REGISTRATION_URL@" property="psc_registration_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@PSC_REGISTRATIONROLLBACK_URL@" property="psc_registrationRollback_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@PSC_STUDY_URL@" property="psc_study_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@PSC_STUDYROLLBACK_URL@" property="psc_studyRollback_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@PSC_ADVERSEEVENT_URL@" property="psc_adverseEvent_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAAERS_REGISTRATION_URL@" property="caaers_registration_url"/>
		</replace>
	        
		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAAERS_REGISTRATIONROLLBACK_URL@" property="caaers_registrationRollback_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAAERS_STUDY_URL@" property="caaers_study_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAAERS_STUDYROLLBACK_URL@" property="caaers_studyRollback_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CAAERS_LABLOADER_URL@" property="caaers_labLoader_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@C3D_REGISTRATION_URL@" property="c3d_registration_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@LOADLAB_URL@" property="loadLab_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@GME_URL@" property="gme_url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@GME_CACHE_DIRECTORY@" property="gme_cache_directory"/>
		</replace>
		
		<replace  file="${cax.home}/temp/caxchange.properties" 
				 propertyFile="install.properties">
					<replacefilter token="@coppa.po.grid.service.url@" property="coppa.po.grid.service.url"/>
		</replace>

		<replace  file="${cax.home}/temp/caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@MESSAGETYPES_FOR_VALIDATION@" property="messageTypes_for_validation"/>
			<replacefilter token="@user.proxy.cache.time.to.live@" property="user.proxy.cache.time.to.live"/>
		</replace>

	</target>
	
	<target name="servicemix-configure-no-auditor" depends="assert,db-init,configure-caxchange-properties,servicemix-configure" description="config servicemix container without auditor logging">
	        <copy file="${cax.home}/conf/servicemix/servicemix-no-auditor.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/servicemix.xml"/>
	        <copy file="${cax.home}/conf/servicemix/log4j-no-auditor.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml"/>
	</target>
	


	<!--Configures the jndi.xml, activemq.xml, grid-caxchange.propertie and other configuration files-->
	<target name="servicemix-configure" depends="assert,db-init,configure-caxchange-properties" description="config servicemix container">
		<copy file="${cax.home}/temp/activemq.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/activemq.xml"/>
		<copy file="${cax.home}/temp/jndi.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/jndi.xml"/>
		<copy file="${cax.home}/temp/servicemix.properties" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf"/>
		
		<copy file="${cax.home}/conf/servicemix/log4j-no-auditor.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml"/>
	        <copy file="${cax.home}/conf/servicemix/servicemix-no-auditor.xml" tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/servicemix.xml"/>
	        
		<copy file="${cax.home}/conf/grid/grid-caxchange.properties" tofile="${cax.home}/temp/grid-caxchange.properties" />
		<replace  file="${cax.home}/temp/grid-caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CERTIFICATE_PATH@" property="delegation_certificateFilePath"/>
		</replace>

		<replace  file="${cax.home}/temp/grid-caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@KEY_PATH@" property="delegation_keyFilePath"/>
		</replace>

		<replace  file="${cax.home}/temp/grid-caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CCTS_GRID_TEST_USERNAME@" property="ccts_grid_test_userName"/>
		</replace>

		<replace  file="${cax.home}/temp/grid-caxchange.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@CCTS_GRID_TEST_PASSWORD@" property="ccts_grid_test_password"/>
		</replace>

		<copy file="${cax.home}/temp/grid-caxchange.properties" tofile="${cax.home}/gridservice/caXchangeInboundService/test/resources/caxchange.properties" overwrite="true"/>


		<copy file="${cax.home}/conf/grid/cax-websso-properties.xml" tofile="${cax.home}/temp/cax-websso-properties.xml" />
		<replace  file="${cax.home}/temp/cax-websso-properties.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@DORIAN-URL@" property="dorian_service_url"/>
		</replace>

		<replace  file="${cax.home}/temp/cax-websso-properties.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@DELEGATION-URL@" property="delegation_service_url"/>
		</replace>

		<replace  file="${cax.home}/temp/cax-websso-properties.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AUTHENTICATION-URL@" property="authentication_service_url"/>
		</replace>

		<replace  file="${cax.home}/temp/cax-websso-properties.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@HOST_IDENTITY@" property="caxchange_host_identity"/>
		</replace>

		<replace  file="${cax.home}/temp/cax-websso-properties.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@WEBSSO_HOST_IDENTITY@" property="websso_host_identity"/>
		</replace>

		<copy file="${cax.home}/temp/cax-websso-properties.xml" tofile="${cax.home}/gridservice/caXchangeInboundService/test/resources/websso-properties.xml" overwrite="true"/>
		
		<copy todir="${gme_cache_directory}">
		     <fileset dir="${cax.home}/payloadSchemas" />
		</copy>
		
		 <copy file="${cax.home}/servicemix-components/servicemix-shared-2008.01-installer-for-caxchange.zip"
		 tofile="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy/servicemix-shared-2008.01-installer.zip"/>


	    <copy todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/lib/optional">
			<fileset dir="${cax.home}/lib"/>
		</copy>
	

		<copy todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf">
			<fileset dir="${cax.home}/conf/servicemix/caXchangeConf"/>
		</copy>

	</target>


	

	<!--Starts  the tomcat container-->
    <target name="tomcat-start" depends="assert" description="starts tomcat server">
    <java jar="${tom.home}/bin/bootstrap.jar" fork="true">
        <jvmarg value="-Dcatalina.home=${tom.home}"/>
    </java>
	</target>

	<!--Stops the tomcat container-->
	<target name="tomcat-stop" depends="assert" description="stops tomat server">
    <java jar="${tom.home}/bin/bootstrap.jar" fork="true">
        <jvmarg value="-Dcatalina.home=${tom.home}"/>
        <arg line="stop"/>
    </java>
	</target>

	<target name="create-databases"  depends="assert, db-init" description="Creates databases required for caXchange, LLT, ActiveMQ">
 
		<echo message="Creating  MySql database caxchange,llt and amq .."/>
		<sql 
		driver="${caxchangedb.driverClass}"
		url="jdbc:mysql://${caxchangedb_host}:${caxchangedb_port}/"
		userid="${caxchangedb_username}"
		password="${caxchangedb_password}"
		 autocommit="true"
		src="${cax.home}/temp/create-db.sql">
		<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			
			</sql>
 
        </target>

	<target name="db-init"  depends="assert" description="Initializes the environment for the databases">
		<copy file="${cax.home}/databaseScripts/create-db.sql" tofile="${cax.home}/temp/create-db.sql"
		overwrite="true"/>
		<copy file="${cax.home}/databaseScripts/caXchangePersistenceStore.sql" tofile="${cax.home}/temp/caXchangePersistenceStore.sql"
		overwrite="true"/>
		<copy file="${cax.home}/databaseScripts/AuthSchemaMySQL.sql" tofile="${cax.home}/temp/AuthSchemaMySQL.sql"
		overwrite="true"/>
		<copy file="${cax.home}/databaseScripts/CLMSchemaMySQL.sql" tofile="${cax.home}/temp/CLMSchemaMySQL.sql"
		overwrite="true"/>
		<copy file="${cax.home}/databaseScripts/DataPrimingMySQL.sql" tofile="${cax.home}/temp/DataPrimingMySQL.sql"
		overwrite="true"/>

		<replace  file="${cax.home}/temp/create-db.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE@" property="caxchangedb1_name"/>
		</replace>
		<replace  file="${cax.home}/temp/create-db.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>
		<replace  file="${cax.home}/temp/create-db.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE@" property="amq_database_name"/>
		</replace>



		<replace  file="${cax.home}/temp/caXchangePersistenceStore.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@CAXCHANGE_DATABASE@" property="caxchangedb1_name"/>
		</replace>
		<replace  file="${cax.home}/temp/AuthSchemaMySQL.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>
		<replace  file="${cax.home}/temp/CLMSchemaMySQL.sql" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>

		<copy file="${cax.home}/conf/servicemix/activemq.xml" tofile="${cax.home}/temp/activemq.xml"
		overwrite="true"/>
		<copy file="${cax.home}/conf/servicemix/servicemix.properties" tofile="${cax.home}/temp/servicemix.properties"
		overwrite="true"/>
		<replace  file="${cax.home}/temp/servicemix.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_HOST@" property="amq_host"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_HOST@" property="amq_host"/>
		</replace>		
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_PORT@" property="amq_port"/>
		</replace>
		
		<replace  file="${cax.home}/temp/servicemix.properties" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_PORT@" property="amq_port"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE@" property="amq_database_name"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE_PORT@" property="amq_db_port"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE_HOST@" property="amq_db_host"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE_USER@" property="amq_db_username"/>
		</replace>
		<replace  file="${cax.home}/temp/activemq.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@AMQ_DATABASE_PASS@" property="amq_db_password"/>
		</replace>
		
		<copy file="${cax.home}/conf/servicemix/jndi.xml" tofile="${cax.home}/temp/jndi.xml"
		overwrite="true"/>
		<replace  file="${cax.home}/temp/jndi.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@JNDI_DATABASE@" property="caxchangedb1_name"/>
		</replace>
		<replace  file="${cax.home}/temp/jndi.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@JNDI_DATABASE_PORT@" property="caxchangedb_port"/>
		</replace>
		<replace  file="${cax.home}/temp/jndi.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@JNDI_DATABASE_HOST@" property="caxchangedb_host"/>
		</replace>
		<replace  file="${cax.home}/temp/jndi.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@JNDI_DATABASE_USER@" property="caxchangedb_username"/>
		</replace>
		<replace  file="${cax.home}/temp/jndi.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@JNDI_DATABASE_PASS@" property="caxchangedb_password"/>
		</replace>

	</target>
	
	<!--creates the necessary schema in MySql database for the caxchange software bunlde-->
	<target name="mysql-db-initialize-caxchange"  depends="assert,system-init,db-init" description="Initilizes the database for caxchagne">
		<echo message="Initializing MySql database for caxchange application....."/>
		<sql 
		driver="${caxchangedb.driverClass}"
		url="jdbc:mysql://${caxchangedb_host}:${caxchangedb_port}/${caxchangedb1_name}"
		userid="${caxchangedb_username}"
		password="${caxchangedb_password}"
		 autocommit="true"
		src="${cax.home}/temp/caXchangePersistenceStore.sql">
		<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
			
			</sql>
	</target>


	<!--creats the necessary schema in MySql database for the caxchange software bunlde-->
	<target name="mysql-db-initialize-llt" depends="system-init,db-init" description="Initilizes the database for LLT">
		<echo message="Initializing MySql database for llt application....."/>
		<sql 
		driver="${caxchangedb.driverClass}"
		url="jdbc:mysql://${llt_db_host}:${llt_db_port}/${llt_db_name}"
		userid="${llt_db_username}"
		password="${llt_db_password}"
		onerror="continue">
		<transaction src="${cax.home}/temp/AuthSchemaMySQL.sql"/>
		<transaction src="${cax.home}/temp/CLMSchemaMySQL.sql"/>
		<transaction src="${cax.home}/temp/DataPrimingMySQL.sql"/>
		<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</sql>
	</target>


	
	
	<!--Deploys the inbound grid service to tomcat -->
	<!--
	<target name="grid-setup"   depends="assert,system-init"  description="sets grid service for the caxchange">
		<ant dir="${cax.home}/gridservice/caXchangeInboundService/" target="deployTomcat" />	
	</target>
        -->
	<target name="grid-setup"   depends="assert,system-init,configure-caxchange-properties,createServiceWar"  description="sets grid service for the caxchange">
		<copy file="${cax.home}/war/wsrf-caxchange.war" todir="${tom.home}/webapps" overwrite="true" />
		<mkdir dir="${tom.home}/conf/caXchange" />
		<copy file="${cax.home}/temp/caxchange.properties" todir="${tom.home}/conf/caXchange" overwrite="true"/>
	</target>

	<target name="grid-setup-jboss"   depends="assert,system-init,configure-caxchange-properties,createServiceWarJBoss"  description="sets grid service for the caxchange on JBoss">
	        <property name="jboss.home" value="${env.JBOSS_HOME}" />
		<copy file="${cax.home}/war/wsrf-caxchange.war" todir="${jboss.home}/server/default/deploy" overwrite="true" />
		<mkdir dir="${tom.home}/conf/caXchange" />
		<copy file="${cax.home}/temp/caxchange.properties" todir="${jboss.home}/caXchange" overwrite="true"/>
	</target>

	

	<target name="auditor-configure" depends="assert,servicemix-configure" description="config to make Auditor ready for its deployment">
		<!-- servicemix.xml is already copied as part of servicemix-configure target -->
		<copy file="${cax.home}/conf/servicemix/log4j.xml" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf"/>
		<copy file="${cax.home}/conf/servicemix/servicemix.xml" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf"/>
		<replace  file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>
		<replace  file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PORT@" property="llt_db_port"/>
		</replace>
		<replace  file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_HOST@" property="llt_db_host"/>
		</replace>
		<replace  file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_USERNAME@" property="llt_db_username"/>
		</replace>
		<replace  file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/log4j.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PASSWORD@" property="llt_db_password"/>
		</replace>
	</target>

	<target name="llt-configure" depends="assert,servicemix-configure" description="config to make LLT ready for its deployment">
             <mkdir dir="${temp.dir}/tomcat" />
             <copy  todir="${temp.dir}/tomcat" >
               <fileset dir="${tomcat.prop}"/> 
             </copy>		

		<replace  file="${temp.dir}/tomcat/llt-server.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>
		<replace  file="${temp.dir}/tomcat/llt-server.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PORT@" property="llt_db_port"/>
		</replace>
		<replace  file="${temp.dir}/tomcat/llt-server.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_HOST@" property="llt_db_host"/>
		</replace>
		<replace  file="${temp.dir}/tomcat/llt-server.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_USERNAME@" property="llt_db_username"/>
		</replace>
		<replace file="${temp.dir}/tomcat/llt-server.xml" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PASSWORD@" property="llt_db_password"/>
		</replace>


		<replace  file="${temp.dir}/tomcat/llt-login.config" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE@" property="llt_db_name"/>
		</replace>
		<replace  file="${temp.dir}/tomcat/llt-login.config" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PORT@" property="llt_db_port"/>
		</replace>
		<replace file="${temp.dir}/tomcat/llt-login.config" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_HOST@" property="llt_db_host"/>
		</replace>
		<replace  file="${temp.dir}/tomcat/llt-login.config" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_USERNAME@" property="llt_db_username"/>
		</replace>
		<replace file="${temp.dir}/tomcat/llt-login.config" 
		 propertyFile="install.properties">
			<replacefilter token="@LLT_DATABASE_PASSWORD@" property="llt_db_password"/>
		</replace>

	<echo message="llt-login.config, llt-catalina.properties, llt-server.xml files are configured and are copied in ${temp.dir}/tomcat "/>		
	<echo message="Please follow instructions in the installation guide move contents of these files to the tomcat server"/>	

	</target>
	
	<!--Deploys the LLT wat to the Tomcat webapps folder-->
	<target name="llt-deploy" depends="assert,system-init,llt-configure" description="deploys the LLT war to tomcat ">
		<copy todir="${tom.home}/webapps" overwrite="true">
			<fileset file="${cax.home}/war/llt.war" />
		</copy>

	</target>
	<!--Deploys the service assembly and the service engine to servicemix container-->
    <target name="sa-deploy"  depends="assert,system-init,servicemix-configure" description="deploys the servicemix assembly">
			<copy file="${cax.home}/temp/caxchange.properties" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf" overwrite="true"/>
		<copy file="${cax.home}/serviceAssemblies/caXchange-servicemix-eip-se-${CAXCHANGE_VERSION}-installer.zip" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy" overwrite="true"/>
        <copy file="${cax.home}/serviceAssemblies/caXchange-ccts-sa-${CAXCHANGE_VERSION}.zip" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/hotdeploy" overwrite="true"/>
    </target>

	<!--Caxchange complete install with servicemix -->
	<target name="complete-install"   depends="hub-install, grid-setup, llt-deploy, auditor-configure"  description="install caxchnge hub, inbound grid service and llt with necessary database and other configuration">
	<echo message="caxchange-complete-installation complete"/>
	</target>

	<!--Caxchange hub install with servicemix -->
	<target name="hub-install"   depends="assert,system-init,clean,servicemix-configure,sa-deploy"  description="install srevicemix and caxchnge with necessary database and other configuration">
	<echo message="caxchange-complete-installation complete"/>
	</target>

	

		<!--Verifies if there were any error in the routing-->
	 <target name="verify-routing" depends="assert,system-init" description="Verifies if there is any changes in the routing pattern" >
		
		 <copy todir="${cax.home}/verifyRouting/caXchangeConf">
			<fileset dir="${cax.home}/conf/servicemix/caXchangeConf"/>
		</copy>
		<java
           dir="${cax.home}/verifyRouting"
           jar="${cax.home}/verifyRouting/caXchange-verify-routing-jar-${CAXCHANGE_VERSION}.jar"
           fork="true"
           failonerror="true"
           maxmemory="128m"
           >
         <arg value="-jar"/>
         <classpath>
           <pathelement location="${cax.home}/verifyRouting/caXchange-verify-routing-jar-${CAXCHANGE_VERSION}.jar"/>
           <pathelement path="${java.class.path}"/>
         </classpath>
       </java>

    </target>

	<target name="update-routing-configuration"   depends="assert,system-init,servicemix-configure"  description="Deploy the updated routing configuration to servicemix">
	 <echo message="Please stop your servicemix using CTRL+C to update routing configuration also note that configuration files will be overwritten after executing this target"/>
	  <input   message="Did you stop your servicemix "
                validargs="y,n"
                addproperty="ifyesrouting"/>
                <condition property="ifnorouting">
                <equals arg1="n" arg2="${ifyesrouting}"/>
                </condition>
                <fail if="ifnorouting">Please stop servicemix using CTRL+C to update routing configuration  and run script again</fail>
				<move todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf_original_before_routing" failonerror="false">
				<fileset dir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf"/>
				</move>
	<copy todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf" overwrite="true">
			<fileset dir="${cax.home}/conf/servicemix/caXchangeConf"/>
		</copy>
		<copy file="${cax.home}/temp/caxchange.properties" todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf" overwrite="true"/>
	</target>




<target name="configure-smoke-test" description="test is the condition to run smoke test are met">
   
	<condition property="isSmoke">
        <not>
            <available file="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf_original_before_smoke"/>
            
        </not>
    </condition>
	 <antcall target="configure-smoke-test-call"/>
	<fail message="Please delete caXchangeConf_original_before_smoke before starting smoke test so that new backup files will be stored here"/>
</target>



	<!--Smoke Test-->
	<target name="configure-smoke-test-call"   description="Configures caxchange smoke test" if="isSmoke">
                <echo message="Please stop your servicemix using CTRL+C to run caxchange smoke test"/>
                <input   message="Did you stop your servicemix "
                validargs="y,n"
                addproperty="ifyessmoke"/>
                <condition property="ifnosmoke">
                <equals arg1="n" arg2="${ifyessmoke}"/>
                </condition>
                <fail if="ifnosmoke">Please stop servicemix using CTRL+C to do caxchange smoke test  and run script again</fail>
                <move todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf_original_before_smoke" failonerror="false" preservelastmodified="yes" verbose="yes">
				<fileset dir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf"/>
				</move>
  				<copy todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf">
				<fileset dir="${cax.home}/conf/servicemix/caXchangeConf_test"/>
                </copy>
				<echo message="Please start servicemix and send CaXchangeRequestMessage to initiate smoke test..............."/>
	</target>


    <target name="revert-smoke-test"    description="Revert caxchange smoke test">
                 <echo message="Initializing caxchange smoke test..............."/>
                 <input   message="Are  you done with smoke test and want to return to original  servicemix config"
                 validargs="y,n"
                 addproperty="ifyesorgi"/>
                 <condition property="ifnoorgi">
                 <equals arg1="n" arg2="${ifyesorgi}"/>
                 </condition>
                 <fail if="ifnoorgi">Please finish the smoke test and comeback</fail>
                 <move todir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf" failonerror="false">
					<fileset dir="${SERVICEMIX_HOME}/apache-servicemix-3.3/conf/caXchangeConf_original_before_smoke"/>
				</move>
					<echo message="Please restart servicemix to take orginal config take effect..............."/>
                </target>
                
    <target name="configure-gme-database-using-mySQL" description="Imports the CCTS message schemas into the GME database. This requires mySQL installed." >
          <copy todir="${temp.dir}/scripts" >
              <fileset dir="${cax.home}/scripts" />
          </copy>
          <replace file="${temp.dir}/scripts/gmeImportDB.sh" propertyFile="${cax.home}/install.properties">
	  			<replacefilter token="@GME_DATABASE_PREFIX@" property="GME_DATABASE_PREFIX"/>
	  			<replacefilter token="@GME_DATABASE_USER@" property="GME_DATABASE_USER"/>
	  			<replacefilter token="@GME_DATABASE_PASSWORD@" property="GME_DATABASE_PASSWORD"/>
	  		        <replacefilter token="@GME_DATABASE_HOST@" property="GME_DATABASE_HOST"/>
	  		        <replacefilter token="@GME_DATABASE_PORT@" property="GME_DATABASE_PORT"/>	  		        
	  			<replacefilter token="@MY_SQL_HOME@" property="MY_SQL_HOME"/>
	  			<replacefilter token="@GME_SERVICE_URL@" property="gme_url"/>
	   </replace>
	   <chmod file="${temp.dir}/scripts/gmeImportDb.sh" perm="744"/>
		 <exec dir="${temp.dir}/scripts" executable="/bin/bash" >
			 
		     <env key="PATH" path="${env.PATH}:${temp.dir}/scripts"/>
		     <arg value="gmeImportDB.sh" />
		 </exec>	   
    </target>
    
        <target name="configure-gme-database" description="Imports the CCTS message schemas into the GME database. This does not require mySQL installed." >
                  <copy todir="${temp.dir}/scripts" >
                      <fileset dir="${cax.home}/scripts" />
                  </copy>
                  <gunzip src="${temp.dir}/scripts/GME_REGISTRY.sql.gz" dest="${temp.dir}/scripts">
                  </gunzip>
                  <echo message="Importing gme database table data into GME_REGISTRY" />
    	      <sql 
    		driver="com.mysql.jdbc.Driver"
    		url="jdbc:mysql://${GME_DATABASE_HOST}:${GME_DATABASE_PORT}/${GME_DATABASE_PREFIX}_GME_REGISTRY"
    		userid="${GME_DATABASE_USER}"
    		password="${GME_DATABASE_PASSWORD}"
    		onerror="abort">
    		<transaction src="${temp.dir}/scripts/GME_REGISTRY.sql"/>
    		<transaction>commit;</transaction>
    			<classpath>
    				<fileset dir="${lib.dir}">
    					<include name="*.jar"/>
    				</fileset>
    			</classpath>
    	     </sql>     
                  <gunzip src="${temp.dir}/scripts/GME_SCHEMA_STORE.sql.gz" dest="${temp.dir}/scripts">
                  </gunzip>
                  <echo message="Importing gme database table data into GME_SCHEMA_STORE" />
    	      <sql 
    		driver="com.mysql.jdbc.Driver"
    		url="jdbc:mysql://${GME_DATABASE_HOST}:${GME_DATABASE_PORT}/${GME_DATABASE_PREFIX}_GME_SCHEMA_STORE"
    		userid="${GME_DATABASE_USER}"
    		password="${GME_DATABASE_PASSWORD}"
    		onerror="abort"
    		escapeprocessing="false">
    		<transaction src="${temp.dir}/scripts/GME_SCHEMA_STORE.sql"/>
    		<transaction>commit;</transaction>
    			<classpath>
    				<fileset dir="${lib.dir}">
    					<include name="*.jar"/>
    				</fileset>
    			</classpath>
    	      </sql>
                  <gunzip src="${temp.dir}/scripts/GME_SCHEMA_CACHE.sql.gz" dest="${temp.dir}/scripts">
                  </gunzip>
                  <echo message="Importing gme database table data into GME_SCHEMA_CACHE" />
    	      <sql 
    		driver="com.mysql.jdbc.Driver"
    		url="jdbc:mysql://${GME_DATABASE_HOST}:${GME_DATABASE_PORT}/${GME_DATABASE_PREFIX}_GME_SCHEMA_CACHE"
    		userid="${GME_DATABASE_USER}"
    		password="${GME_DATABASE_PASSWORD}"
    		onerror="abort">
    		<transaction src="${temp.dir}/scripts/GME_SCHEMA_CACHE.sql"/>
    		<transaction>commit;</transaction>
    			<classpath>
    				<fileset dir="${lib.dir}">
    					<include name="*.jar"/>
    				</fileset>
    			</classpath>
    	      </sql> 
    	      <echo message="Finished Importing databases." />
    	      <echo message="Changing hostname to ${gme_url}." />
    	      <sql 
    		driver="com.mysql.jdbc.Driver"
    		url="jdbc:mysql://${GME_DATABASE_HOST}:${GME_DATABASE_PORT}/${GME_DATABASE_PREFIX}_GME_REGISTRY"
    		userid="${GME_DATABASE_USER}"
    		password="${GME_DATABASE_PASSWORD}"
    		onerror="abort">
    		<transaction>
    		update NAMESPACES set SERVICE_ID='${gme_url}' where SERVICE_id='http://localhost:8090/wsrf/services/cagrid/GlobalModelExchange';
    		commit;
    		</transaction>
    		<transaction>commit;</transaction>
    			<classpath>
    				<fileset dir="${lib.dir}">
    					<include name="*.jar"/>
    				</fileset>
    			</classpath>
    	      </sql> 	      
    </target>
    
    <target name="update-gme-url" description="Updates the GME url for the ccts.cabig namespace" >
    	      <echo message="Updating the URL to ${gme_url}." />
    	      <sql 
    		driver="com.mysql.jdbc.Driver"
    		url="jdbc:mysql://${GME_DATABASE_HOST}:${GME_DATABASE_PORT}/${GME_DATABASE_PREFIX}_GME_REGISTRY"
    		userid="${GME_DATABASE_USER}"
    		password="${GME_DATABASE_PASSWORD}"
    		onerror="abort">
    		<transaction>
    		update NAMESPACES set SERVICE_ID='${gme_url}' where NAMESPACE='ccts.cabig';
    		commit;
    		</transaction>
    		<transaction>commit;</transaction>
    			<classpath>
    				<fileset dir="${lib.dir}">
    					<include name="*.jar"/>
    				</fileset>
    			</classpath>
    	      </sql> 	      
    
    </target>
    
    <target name="createServiceWar" description="Creates the inbound service war file." >
         <copy tofile="${cax.home}/gridservice/caXchangeInboundService/deploy.properties" overwrite="true"
                file="service-deploy.properties" />
         
         <delete dir="${temp.dir}/inbound" />
         <mkdir dir="${temp.dir}/inbound" />
         <dirname file="${temp.dir}/inbound/" property="tomcat.dir" />
	  <ant antfile="${cax.home}/gridservice/caXchangeInboundService/build.xml" inheritAll="false" target="createWar">
	       <property name="tomcat.dir" value="${tomcat.dir}"/>
	       <property name="globus.webapp" value="wsrf-caxchange"/>
	       <property name="build.compiler" value="extJavac"/>
          </ant>
          <copy todir="${cax.home}/war">
              <fileset dir="${cax.home}/gridservice/caXchangeInboundService/dist">
                   <include name="wsrf-caxchange.war" />
              </fileset>
          </copy>
    </target>

    <target name="createServiceWarJBoss" description="Creates the inbound service war file for JBoss." >
         <property name="jboss.home" value="${env.JBOSS_HOME}" />
         <copy tofile="${cax.home}/gridservice/caXchangeInboundService/deploy.properties" overwrite="true"
                file="service-deploy.properties" />
         
         <delete dir="${temp.dir}/inbound" />
         <mkdir dir="${temp.dir}/inbound" />
         <dirname file="${temp.dir}/inbound/" property="jboss.dir" />
	  <ant antfile="${cax.home}/gridservice/caXchangeInboundService/build.xml" inheritAll="false" target="createWarJBoss">
	       <property name="jboss.dir" value="${jboss.dir}"/>
	       <property name="globus.webapp" value="wsrf-caxchange"/>
	       <property name="build.compiler" value="extJavac"/>
          </ant>
          <copy todir="${cax.home}/war">
              <fileset dir="${cax.home}/gridservice/caXchangeInboundService/dist">
                   <include name="wsrf-caxchange.war" />
              </fileset>
          </copy>
    </target>    
</project>