<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns:eip="http://servicemix.apache.org/eip/1.0"
       xmlns:caxchange="http://nci.nih.gov/caXchange">
  <!-- Pipeline to invoke the delegation service -->
  <eip:pipeline service="caxchange:invokeDelegationPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:setSubjectService" />
      </eip:transformer>
      <eip:faultsTarget>
         <eip:exchange-target service="caxchange:handleErrorResponsePipeline" />
      </eip:faultsTarget>
      <eip:target>
        <eip:exchange-target service="caxchange:storeOriginalMessagePipeline" />
      </eip:target>
  </eip:pipeline>  
  
  <!-- Pipeline to store original message -->
  <eip:pipeline service="caxchange:storeOriginalMessagePipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:storeOriginalMessageService" />
      </eip:transformer>
      <eip:faultsTarget>
         <eip:exchange-target service="caxchange:handleErrorResponsePipeline" />
      </eip:faultsTarget>
      <eip:target>
        <eip:exchange-target service="caxchange:MessageTypeRouter" />
      </eip:target>
  </eip:pipeline>   
  
  <!-- Pipeline to create an error response and forward it to JMS outbound queue -->
  <eip:pipeline service="caxchange:handleErrorResponsePipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:handleErrorResponseService" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:ResponseQueueService" />
      </eip:target>
  </eip:pipeline>  
  <!-- content based router to route different caXchange message types -->
  <eip:content-based-router service="caxchange:MessageTypeRouter" endpoint="endpoint">
    <eip:rules>
      <eip:routing-rule>
        <eip:predicate>
          <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:messageType='REGISTER_SUBJECT']) = 1" namespaceContext="#nsContext"/>
        </eip:predicate>
        <eip:target>
          <eip:exchange-target service="caxchange:registerSubjectRecipients" />
        </eip:target>
      </eip:routing-rule>
      <eip:routing-rule>
        <eip:predicate>
          <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:messageType='STUDY_CREATION']) = 1" namespaceContext="#nsContext"/>
        </eip:predicate>
        <eip:target>
          <eip:exchange-target service="caxchange:studyCreationRecipients" />
        </eip:target>
      </eip:routing-rule>      
      <eip:routing-rule>
        <eip:predicate>
          <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:messageType='LOAD_LAB_TO_CDMS']) = 1" namespaceContext="#nsContext"/>
        </eip:predicate>
        <eip:target>
          <eip:exchange-target service="caxchange:loadLabToCDMS" />
        </eip:target>
      </eip:routing-rule>         
      <eip:routing-rule>
        <eip:target>
          <eip:exchange-target service="caxchange:callUnhandledMessageType" />
        </eip:target>
      </eip:routing-rule>
    </eip:rules>
  </eip:content-based-router>
  
  <!-- Static recipient lists for each type of message -->
  <!-- static recipient list for register subject -->
    <eip:caxchange-static-recipient-list service="caxchange:registerSubjectRecipients" endpoint="endpoint">
      <eip:recipients>
        <eip:exchange-target service="caxchange:caaersRegisterSubjectRouter" />
        <eip:exchange-target service="caxchange:ctomRegisterSubjectRouter" />
        <eip:exchange-target service="caxchange:c3DRegisterSubjectRouter" />
      </eip:recipients>
  </eip:caxchange-static-recipient-list>
  
  <!-- static recipient list for study creation -->
    <eip:caxchange-static-recipient-list service="caxchange:studyCreationRecipients" endpoint="endpoint">
      <eip:recipients>
        <eip:exchange-target service="caxchange:caaersStudyCreationRouter" />
        <eip:exchange-target service="caxchange:ctomStudyRouter" />
      </eip:recipients>
  </eip:caxchange-static-recipient-list>  
  
  <!-- static recipient list for load lab to CDMS -->
  <eip:caxchange-static-recipient-list service="caxchange:loadLabToCDMS" endpoint="endpoint">
      <eip:recipients>
        <eip:exchange-target service="caxchange:callLoadLabPipeline" />
      </eip:recipients>
  </eip:caxchange-static-recipient-list>  
  
  
  <!--- EIP components for invoking the PSC  -->
  
    <eip:content-based-router service="caxchange:pscRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:pscRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callPscPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>
  
  <eip:pipeline service="caxchange:callPscPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:pscProcess" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
      </eip:target>
  </eip:pipeline>  
  
  
  <!-- End EIP Components for invoking the PSC -->
  
  <!--- EIP components for invoking the load lab to CDMS  -->
    <eip:pipeline service="caxchange:callLoadLabPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:loadLab" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
      </eip:target>
     </eip:pipeline> 
  <!-- End EIP Components for invoking the load lab to CDMS  -->
  
  <!--- EIP components for invoking the C3D  -->
    <eip:content-based-router service="caxchange:c3DRegisterSubjectRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:c3dRegistrationRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callc3DRegistrationPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>
  
    <eip:pipeline service="caxchange:callc3DRegistrationPipeline" endpoint="endpoint">
        <eip:transformer>
          <eip:exchange-target service="caxchange:c3dRegistration" />
        </eip:transformer>
        <eip:target>
          <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
        </eip:target>
  </eip:pipeline>  
  
    <!-- End EIP Components for invoking the C3D -->

  
  <!--- EIP components for invoking the caAERS  -->
  
    <eip:content-based-router service="caxchange:caaersRegisterSubjectRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:caaersRegistrationRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callcaAERSRegistrationPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>
  

    <eip:content-based-router service="caxchange:caaersStudyCreationRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:caaersStudyRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callcaAERSStudyPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>  
  
  <eip:pipeline service="caxchange:callcaAERSRegistrationPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:caaersRegistration" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
      </eip:target>
  </eip:pipeline>  
  
  <eip:pipeline service="caxchange:callcaAERSStudyPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:caaersStudy" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
      </eip:target>
  </eip:pipeline>   
  
  
  <!-- End EIP Components for invoking the caAERS -->  
  
  <!--- EIP components for invoking the cTOM  -->
  
    <eip:content-based-router service="caxchange:ctomRegisterSubjectRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:ctomRegistrationRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callCtomRegistrationPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>
  
    <eip:content-based-router service="caxchange:ctomStudyRouter" endpoint="endpoint">
      <eip:rules>
        <eip:routing-rule>
          <eip:predicate>
            <eip:xpath-predicate xpath="count(/caxchange:caXchangeRequestMessage/caxchange:metadata[caxchange:operation='ROLLBACK']) = 1" namespaceContext="#nsContext"/>
          </eip:predicate>
          <eip:target>
            <eip:exchange-target service="caxchange:caaersStudyRollback" />
          </eip:target>
        </eip:routing-rule>
        <eip:routing-rule>
          <eip:target>
            <eip:exchange-target service="caxchange:callCtomStudyPipeline" />
          </eip:target>
        </eip:routing-rule>
      </eip:rules>
  </eip:content-based-router>  
  
  <eip:pipeline service="caxchange:callCtomRegistrationPipeline" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:ctomRegistration" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
      </eip:target>
  </eip:pipeline>  
  
    <eip:pipeline service="caxchange:callCtomStudyPipeline" endpoint="endpoint">
        <eip:transformer>
          <eip:exchange-target service="caxchange:ctomStudy" />
        </eip:transformer>
        <eip:target>
          <eip:exchange-target service="caxchange:caxchangeResponseAggregator" />
        </eip:target>
  </eip:pipeline> 
  
  <!-- End EIP Components for invoking the cTOM -->  
  
  <!-- EIP Aggregator -->
  <eip:caxchangeAggregator service="caxchange:caxchangeResponseAggregator" endpoint="endpoint" timeOut="60000">
         <eip:target>
           <eip:exchange-target service="caxchange:aggregatorListener"  />
        </eip:target>
  </eip:caxchangeAggregator>
  
  <!--  EIP send response for unhandled message type -->
  
    <eip:pipeline service="caxchange:callUnhandledMessageType" endpoint="endpoint">
      <eip:transformer>
        <eip:exchange-target service="caxchange:unhandledMessageType" />
      </eip:transformer>
      <eip:target>
        <eip:exchange-target service="caxchange:handleErrorResponsePipeline" />
      </eip:target>
  </eip:pipeline>
  
    <eip:namespace-context id="nsContext">
      <eip:namespaces>
        <eip:namespace prefix="caxchange">http://caXchange.nci.nih.gov/messaging</eip:namespace>
      </eip:namespaces>
  </eip:namespace-context>

</beans>
