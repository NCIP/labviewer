<?xml version="1.0" encoding="ASCII"?>
<xs:schema xmlns:tns="urn:hl7-org:v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:hl7-org:v3" xmlns:mif="urn:hl7-org:v3/mif" targetNamespace="urn:hl7-org:v3" elementFormDefault="qualified">
	<!--xs:include schemaLocation="datatypes-base.xsd"/-->
	<xs:element name="document" type="Document"/>
	<xs:complexType name="Document">
		<xs:sequence>
			<xs:element name="id" type="II"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="II" type="II"/>
	<xs:complexType name="ANY" abstract="true"/>
	<xs:complexType name="II">
		<xs:complexContent>
			<xs:extension base="ANY">
				<xs:attribute name="root" type="uid" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A unique identifier that guarantees the global uniqueness
                     of the instance identifier. The root alone may be the
                     entire instance identifier.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			<xs:attribute name="extension" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A character string as a unique identifier within the
                     scope of the identifier root.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="assigningAuthorityName" type="st" use="optional">
					<xs:annotation>
						<xs:documentation>
                     A human readable name or mnemonic for the assigning
                     authority. This name may be provided solely for the
                     convenience of unaided humans interpreting an  value
                     and can have no computational meaning. Note: no
                     automated processing must depend on the assigning
                     authority name to be present in any form.
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="displayable" type="bl" use="optional">
					<xs:annotation>
						<xs:documentation>
                     Specifies if the identifier is intended for human
                     display and data entry (displayable = true) as
                     opposed to pure machine interoperation (displayable
                     = false).
                  </xs:documentation>
					</xs:annotation>
				</xs:attribute>				
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="uid">
		<xs:annotation>
			<xs:documentation>
            A unique identifier string is a character string which
            identifies an object in a globally unique and timeless
            manner. The allowable formats and values and procedures
            of this data type are strictly controlled by HL7. At this
            time, user-assigned identifiers may be certain character
            representations of ISO Object Identifiers ()
            and DCE
            Universally Unique Identifiers ().
            HL7 also reserves
            the right to assign other forms of UIDs (,
            such as mnemonic
            identifiers for code systems.
         </xs:documentation>
		</xs:annotation>
		<xs:union memberTypes="oid uuid ruid"/>
	</xs:simpleType>
	<xs:simpleType name="oid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-2](\.(0|[1-9][0-9]*))*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="uuid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ruid">
		<xs:annotation>
			<xs:documentation/>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="[A-Za-z][A-Za-z0-9\-]*"/>
		</xs:restriction>
	</xs:simpleType>
  <xs:simpleType name="st">
    <xs:annotation>
      <xs:documentation>
            The character string data type stands for text data,
            primarily intended for machine processing (e.g.,
            sorting, querying, indexing, etc.) Used for names,
            symbols, and formal expressions.
         </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="bl">
    <xs:annotation>
      <xs:documentation>
            The Boolean type stands for the values of two-valued logic.
            A Boolean value can be either true or
            false, or, as any other value may be NULL.
         </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:boolean">
      <xs:pattern value="true|false"/>
    </xs:restriction>
  </xs:simpleType>  	
</xs:schema>
