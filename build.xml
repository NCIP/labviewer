<project name="UPT Project" basedir="." default="all">
	<description>UPT Project Build File</description>

	<property environment="env" />
	<property file="build.properties" />
	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.lib.dir" value="${test.dir}/lib" />
	<property name="test.log.dir" value="test/logs" />
	<property name="junit.results.dir" value="${test.log.dir}/junit" />

	<target name="init">
		<property name="webinf.home" value="${web.home}/WEB-INF" />
		<property name="lib.home" value="${webinf.home}/lib" />
		<property name="classes.home" value="${webinf.home}/classes" />
		<property name="war.file" value="${dist.home}/${app.name}.war" />
	</target>

	<target name="clean" depends="init" description="Delete the Build and Dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
	</target>

	<target name="prepareDir" depends="init">
		<mkdir dir="${build.home}" />
		<mkdir dir="${test.home}" />
		<mkdir dir="${junit.results.dir}" />
		<mkdir dir="${build.home}/WEB-INF" />
		<mkdir dir="${build.home}/WEB-INF/tld" />
		<mkdir dir="${build.home}/WEB-INF/conf" />
		<mkdir dir="${build.home}/WEB-INF/lib" />
		<mkdir dir="${build.home}/META-INF" />
		<mkdir dir="${classes.home}" />
		<mkdir dir="${dist.home}" />
	</target>

	<target name="prepareBuild" depends="prepareDir">
		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>

		<copy todir="${build.home}/WEB-INF/">
			<fileset dir="${webinf.home}" />
		</copy>

		<copy todir="${lib.home}" overwrite="true">
			<fileset dir="${artifacts.dir}" includes="ctomlabapi*.jar" />
		</copy>

		<copy todir="${build.home}/WEB-INF/lib">
			<fileset dir="${lib.home}" includes="**/*.jar" />
		</copy>
	</target>

	<target name="prepare" depends="prepareDir,prepareBuild" />

	<target name="configure" depends="prepareDir, configureCSMAuthentication, configureWebSSOAuthentication">
		<copy file="conf/labviewer.hibernate.cfg.xml.template" toFile="${build.home}/WEB-INF/classes/labviewer.csm.new.hibernate.cfg.xml" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="database_url" value="${database.url}" />
				<filter token="database_user" value="${database.username}" />
				<filter token="database_passwd" value="${database.password}" />
			</filterset>
		</copy>
		<copy file="conf/log4j.properties.template" toFile="${build.home}/WEB-INF/classes/log4j.properties" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="log_dir" value="${log.dir}" />
			</filterset>
		</copy>
		<copy file="conf/loadToCTMSURL.properties.template" toFile="${build.home}/WEB-INF/classes/loadToCTMSURL.properties" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="loadToCTMSURL" value="${loadToCTMSURL}" />
			</filterset>
		</copy>
		<copy file="conf/baseURL.properties.template" toFile="${build.home}/WEB-INF/classes/baseURL.properties" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="BaseURLcaAERS" value="${BaseURLcaAERS}" />
				<filter token="BaseURLC3D" value="${BaseURLC3D}" />
			</filterset>
		</copy>
	</target>

	<target name="configureCSMAuthentication" unless="websso.enabled">
		<copy file="conf/web.xml.csm.template" toFile="${build.home}/WEB-INF/web.xml" overwrite="true" />
		<copy file="conf/login.config.template" toFile="${dist.home}/login.config" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="database_url" value="${database.url}" />
				<filter token="database_user" value="${database.username}" />
				<filter token="database_passwd" value="${database.password}" />
			</filterset>
		</copy>
	</target>

	<target name="configureWebSSOAuthentication" if="websso.enabled">
		<copy file="conf/web.xml.sso.template" toFile="${build.home}/WEB-INF/web.xml" overwrite="true" />
		<copy file="conf/cas-client.properties.template" toFile="${build.home}/WEB-INF/cas-client.properties" filtering="true" overwrite="true">
			<filterset begintoken="@" endtoken="@">
				<filter token="cas_server" value="${websso.cas.server}" />
				<filter token="client_server" value="${websso.client.server}" />
			</filterset>
		</copy>
		<copy file="conf/client-config.wsdd" toFile="${build.home}/WEB-INF/classes/client-config.wsdd" overwrite="true" />
	</target>

	<target name="compile" depends="init,prepare" description="Compiles all the files in the project">
		<javac srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" debug="true" deprecation="true">
			<classpath>
				<fileset dir="${lib.home}" includes="*.jar" />
				<fileset dir="${otherlib.home}" includes="*.jar" />
				<fileset dir="${libext.home}" includes="*.jar" />
			</classpath>
		</javac>
		<copy todir="${build.home}/WEB-INF/classes" overwrite="true">
			<fileset dir="${sdkclient.home}" excludes="**/*.java" />
			<fileset file="${src.home}/gov/nih/nci/caxchange/ctom/viewer/resources/ApplicationResources.properties" />
			<fileset file="${src.home}/applicationContext.xml" />
		</copy>
	</target>

	<target name="dist" depends="init,compile" description="Creates war file">
		<jar jarfile="${war.file}" basedir="${build.home}" />
		<jar jarfile="${artifacts.dir}/labviewerauth.jar">
			<fileset dir="${build.home}/WEB-INF/classes">
				<include name="**/LabViewerAuthorizationHelper.class" />
			</fileset>
		</jar>
	</target>

	<target name="cleanup" depends="dist" description="Delete the Build directory">
		<delete dir="${build.home}" />
	</target>

	<target name="test" depends="all" description="Tests the CTOM Lab Domain model API">
		
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<pathelement path="${libext.home}/ctodslabviewer.jar" />
				<fileset dir="${lib.home}" includes="*" />
				<fileset dir="${otherlib.home}" includes="*" />
				<fileset dir="${libext.home}" includes="*" />
				<pathelement path="test/classes"/>
			</classpath>

			<batchtest fork="yes" todir="${junit.results.dir}">

				<fileset dir="${test.home}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		
		
		
		
	</target>




	<target name="all" depends="init,clean,prepare,configure,compile,dist,cleanup" description="Builds and deploys the entire application by cleaning the build and dist directories" />

	<target name="deployTomcat" depends="all">
		<copy todir="${env.CATALINA_HOME}/webapps" overwrite="true">
			<fileset file="${war.file}" />
		</copy>
		<antcall target="deployTomcatCSM" />
	</target>

	<target name="deployTomcatCSM" unless="websso.enabled">
		<copy todir="${env.CATALINA_HOME}/conf" overwrite="true">
			<fileset file="${dist.home}/login.config" />
		</copy>
		<echo message="================================================================================" />
		<echo message="Edit your Tomcat startup or set your CATALINA_OPTS environment variable with the" />
		<echo message="following." />
		<echo message="-Djava.security.auth.login.config=%CATALINA_HOME%\conf\login.config" />
		<echo message="================================================================================" />
	</target>

	<target name="deployJBoss" depends="all">
		<copy todir="${jboss.home}/server/default/deploy">
			<fileset file="${war.file}" />
		</copy>
	</target>
</project>