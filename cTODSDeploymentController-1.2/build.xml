<project name="cTomLabViewer" default="build_zip" basedir=".">
	<property file="build-download.properties" />
	<property environment="env" />
	<!--
	TARGET: Zip
		Zip the source code for cTomDataPersistence, cTomLabViewer,  LabLoader, RegistrationConsumerService, StudyConsumerService, StudyLookUpService
	-->

	<target name="build_zip">
		<mkdir dir="${dest.dir}" />
		<zip destfile="${dest.dir}/${module.name}.zip">
			<zipfileset dir="${artifacts.dir}" prefix="artifacts" />
			<zipfileset dir="${cTODDeployment.dir}" prefix="cTODSDeploymentController" />
			<zipfileset dir="${cTomData.dir}" prefix="CTOMDataPersistence">
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${cTomLab.dir}" prefix="cTODSLabViewer">
				<exclude name="**/build/**" />
			</zipfileset>
			<zipfileset dir="${labLoader.dir}" prefix="LabLoader">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${regConsumerService.dir}" prefix="RegistrationConsumerService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${studyConsumerService.dir}" prefix="StudyConsumerService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${studyLookupService.dir}" prefix="StudyLookupService">
				<exclude name="**/build/**" />
				<exclude name="**/bin/**" />
			</zipfileset>
			<zipfileset dir="${ddl.dir}" prefix="DDL" />
		</zip>
	</target>

	<!-- Unzips the build download file -->
	<target name="unZip" description="Unzips the build download">
		<unzip src="${dest.dir}/${module.name}.zip" dest="${unZip.dir}" />
	</target>


	<!-- Builds the cTOM-wsrf war file -->
	<target name="pre-stage" description="Builds the cTOM-wsrf war file">

		<echo>Pre stage  Registration Service </echo>
		<ant antfile="${unZip.dir}/RegistrationConsumerService/build-ctms.xml" dir="${unZip.dir}/RegistrationConsumerService" target="deploySkeletonService" inheritall="true">

		</ant>
		<echo>Pre stage  StudyConsumer Service </echo>
		<ant antfile="${unZip.dir}/StudyConsumerService/build-ctms.xml" dir="${unZip.dir}/StudyConsumerService" target="deploySkeletonService" inheritall="true">

		</ant>
		<echo>Pre stage  StudyLookup Service </echo>
		<ant antfile="${unZip.dir}/StudyLookupService/build-ctms.xml" dir="${unZip.dir}/StudyLookupService" target="deploySkeletonService" inheritall="true">

		</ant>
		<echo>Pre stage  Lab Loader Service </echo>
		<ant antfile="${unZip.dir}/LabLoader/build-ctms.xml" dir="${unZip.dir}/LabLoader" target="deploySkeletonService" inheritall="true">

		</ant>
	</target>

	<target name="build-stage" depends="pre-stage" description="">
		<echo>Building  stage temp directory</echo>
		<mkdir dir="${stage.dir}" />
		<unzip dest="${stage.dir}" overwrite="true">
			<fileset dir="${unZip.dir}/RegistrationConsumerService/build/">
				<include name="*.zip" />
			</fileset>
			<fileset dir="${unZip.dir}/StudyConsumerService/build/">
				<include name="*.zip" />
			</fileset>
			<fileset dir="${unZip.dir}/StudyLookupService/build/">
				<include name="*.zip" />
			</fileset>
			<fileset dir="${unZip.dir}/LabLoader/build/">
				<include name="*.zip" />
			</fileset>
		</unzip>
		<!--<move todir="${webapps.dir}">
			<fileset dir="${stage.dir}/webapps/wsrf"/>
		</move>-->
		<mkdir dir="${webapps.dir}/share/schema/core" />
		<mkdir dir="${webapps.dir}/share/schema/resolutionService" />
		<mkdir dir="${webapps.dir}/share/schema/transferService" />
		<mkdir dir="${webapps.dir}/share/schema/ws" />
		<mkdir dir="${webapps.dir}/share/schema/wsrf" />

		<copy todir="${webapps.dir}/share/schema/core">
			<fileset dir="wsrf-folder/core" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/resolutionService">
			<fileset dir="wsrf-folder/resolutionService" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/transferService">
			<fileset dir="wsrf-folder/transferService" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/ws">
			<fileset dir="wsrf-folder/ws" />
		</copy>
		<copy todir="${webapps.dir}/share/schema/wsrf">
			<fileset dir="wsrf-folder/wsrf" />
		</copy>
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_resolution_service" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_resolution_test" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_transfer_service" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_common" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_registry" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_authzService" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_counter" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_mgmt" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_interop" />
		<mkdir dir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_unit" />

		<copy todir="${webapps.dir}/WEB-INF/etc/globus_resolution_service">
			<fileset dir="wsrf-folder/globus_resolution_service" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_resolution_test">
			<fileset dir="wsrf-folder/globus_resolution_test" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_transfer_service">
			<fileset dir="wsrf-folder/globus_transfer_service" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_common">
			<fileset dir="wsrf-folder/globus_wsrf_common" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core">
			<fileset dir="wsrf-folder/globus_wsrf_core" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_registry">
			<fileset dir="wsrf-folder/globus_wsrf_core_registry" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_authzService">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_authzService" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_counter">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_counter" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_core_samples_mgmt">
			<fileset dir="wsrf-folder/globus_wsrf_core_samples_mgmt" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_interop">
			<fileset dir="wsrf-folder/globus_wsrf_test_interop" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc/globus_wsrf_test_unit">
			<fileset dir="wsrf-folder/globus_wsrf_test_unit" />
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/etc">
			<fileset dir="wsrf-folder">
				<include name="globus*.*" />
			</fileset>
		</copy>

		<copy todir="${webapps.dir}/WEB-INF">
			<fileset dir="wsrf-folder">
				<include name="web.xml" />
			</fileset>
		</copy>
		<copy todir="${webapps.dir}/WEB-INF/lib">
			<fileset dir="wsrf-folder/lib-files">
				<include name="*.*" />
			</fileset>
		</copy>
		<mkdir dir="${webapps.dir}/WEB-INF/attachments" />
		<mkdir dir="${webapps.dir}/WEB-INF/classes" />
		<copy todir="${webapps.dir}/WEB-INF/classes">
			<fileset dir="wsrf-folder/classes" />
		</copy>
	</target>

	<target name="build-ctom-wsrf" depends="build-stage" description="Builds the ctom wsrf">
		<echo>Building deployable WAR file ...</echo>
		<mkdir dir="${war-dist.dir}" />
		<war destfile="${war-dist.dir}/${war.name}.war" basedir="${webapps.dir}" update="true" webxml="${webapps.dir}/WEB-INF/web.xml" />
	</target>

	<target name="build-db-jars" description="Builds the database jars">
		<echo>Creating cTOMPersistence jar</echo>
		<ant antfile="${unZip.dir}/CTOMDataPersistence/build.xml" dir="${unZip.dir}/CTOMDataPersistence" target="dist" inheritall="true" />
	</target>
	<!-- Deploys the cTOM-wsrf and cTODSLabViewer war files -->
	<target name="deploy_cTODS" depends="build-db-jars,build-ctom-wsrf" description="Deploys the cTOM-wsrf and cTODSLabViewer war files">
		<echo>Deploying cTODSLabViewer to Tomcat webapps</echo>
		<ant antfile="${unZip.dir}/cTODSLabViewer/build.xml" dir="${unZip.dir}/cTODSLabViewer" target="deployTomcat" inheritall="true" />
		<echo>Deploying ctom-wsrf to Tomcat webapps</echo>
		<copy todir="${env.CATALINA_HOME}/webapps" overwrite="true">
			<fileset file="${war-dist.dir}/${war.name}.war" />
		</copy>
	</target>
</project>
