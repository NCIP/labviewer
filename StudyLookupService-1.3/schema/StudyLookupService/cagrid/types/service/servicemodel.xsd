<?xml version="1.0"?>
<xs:schema targetNamespace="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.service" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:serv="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.service" xmlns:com="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common" elementFormDefault="qualified">
	<xs:import namespace="gme://caGrid.caBIG/1.0/gov.nih.nci.cagrid.metadata.common" schemaLocation="../common/common.xsd"/>
	<xs:element name="Service" type="serv:Service"/>
	<xs:complexType name="Service">
		<xs:annotation>
			<xs:documentation>A service is a "conceptual" definition of a collection of functional contexts.
This has no physical manifestation in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="pointOfContactCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="com:PointOfContact" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="serviceContextCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="serv:ServiceContext" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="serv:CaDSRRegistration" minOccurs="0"/>
			<xs:element ref="com:SemanticMetadata" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="description" use="required" type="xs:string"/>
		<xs:attribute name="name" use="required" type="xs:string"/>
		<xs:attribute name="version" use="required" type="xs:string"/>
	</xs:complexType>
	<xs:element name="Operation" type="serv:Operation"/>
	<xs:complexType name="Operation">
		<xs:annotation>
			<xs:documentation>This represents a method/operation/function in a service context.  Its input parameters are described by its InputParameter associations,  its output by its Output association, and any errors it produces by its Fault associations.

This is manifested as an operation of a service in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="inputParameterCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="serv:InputParameter" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="serv:Output" minOccurs="0"/>
			<xs:element name="faultCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="serv:Fault" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="com:SemanticMetadata" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="description" use="required" type="xs:string"/>
		<xs:attribute name="name" use="required" type="xs:string"/>
	</xs:complexType>
	<xs:element name="Output" type="serv:Output"/>
	<xs:complexType name="Output">
		<xs:annotation>
			<xs:documentation>Represents the result/output of an operation.  Its non-existence represents the operation produces no result.

This is manifested as the value of an operation response in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="com:UMLClass" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="dimensionality" use="required" type="xs:int">
			<xs:annotation>
				<xs:documentation>Only valid if isArray is true; indicates number of dimensions in the array</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isArray" use="required" type="xs:boolean"/>
		<xs:attribute name="qName" use="required" type="xs:QName"/>
	</xs:complexType>
	<xs:element name="InputParameter" type="serv:InputParameter"/>
	<xs:complexType name="InputParameter">
		<xs:annotation>
			<xs:documentation>Represents an input parameter to an operation.

This is manifested as a parameter of a service request in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="com:UMLClass" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="dimensionality" use="required" type="xs:int">
			<xs:annotation>
				<xs:documentation>Only valid if isArray is true; represents the dimensionality of the array</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="index" use="required" type="xs:int">
			<xs:annotation>
				<xs:documentation>This is the 0-based index of the parameter in the operation's signature</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="isArray" use="required" type="xs:boolean"/>
		<xs:attribute name="isRequired" use="required" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Whether the given parameter is allowed to be null or not</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" use="required" type="xs:string"/>
		<xs:attribute name="qName" use="required" type="xs:QName"/>
	</xs:complexType>
	<xs:element name="Fault" type="serv:Fault"/>
	<xs:complexType name="Fault">
		<xs:annotation>
			<xs:documentation>This represents an error that could occur during the execution of the operation.

This is manifested as an operation fault in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
		<xs:attribute name="description" use="required" type="xs:string"/>
		<xs:attribute name="name" use="required" type="xs:string"/>
	</xs:complexType>
	<xs:element name="ServiceContext" type="serv:ServiceContext"/>
	<xs:complexType name="ServiceContext">
		<xs:annotation>
			<xs:documentation>This is a functional collection of operations that work over a common collection of stateful resources.
A service without stateful resources would have a single context.

This is manifested as an actual service in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="operationCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="serv:Operation" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="contextPropertyCollection">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="serv:ContextProperty" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="description" use="required" type="xs:string"/>
		<xs:attribute name="name" use="required" type="xs:string"/>
	</xs:complexType>
	<xs:element name="ContextProperty" type="serv:ContextProperty"/>
	<xs:complexType name="ContextProperty">
		<xs:annotation>
			<xs:documentation>This represents an exposed property of a service context's state.

This is manifested as a resource property in the grid.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
		<xs:attribute name="description" use="required" type="xs:string"/>
		<xs:attribute name="name" use="required" type="xs:string"/>
	</xs:complexType>
	<xs:element name="CaDSRRegistration" type="serv:CaDSRRegistration"/>
	<xs:complexType name="CaDSRRegistration">
		<xs:sequence/>
		<xs:attribute name="registrationStatus" use="required" type="xs:string"/>
		<xs:attribute name="workflowStatus" use="required" type="xs:string"/>
	</xs:complexType>
</xs:schema>
