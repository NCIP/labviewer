<?xml version="1.0" encoding="UTF-8"?>
<deployment name="defaultServerConfig"
    xmlns="http://xml.apache.org/axis/wsdd/"
    xmlns:java="http://xml.apache.org/axis/wsdd/providers/java"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <service name="TestService" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="providers" value="
            GetRPProvider GetMRPProvider QueryRPProvider SetRPProvider  
            DestroyProvider SetTerminationTimeProvider 
            org.globus.wsrf.impl.TestProvider"/>
        <parameter name="handlerClass"
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.TestService"/>
        <wsdlFile>share/schema/core/tests/basic/test_service.wsdl</wsdlFile>
        <parameter name="securityDescriptor" value="org/globus/wsrf/impl/test-service-config.xml"/>
    </service>
    <service name="TestServiceRequest" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="providers" value="
            GetRPProvider GetMRPProvider QueryRPProvider SetRPProvider  
            DestroyProvider SetTerminationTimeProvider"/>
        <parameter name="handlerClass"
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.TestService"/>
        <wsdlFile>share/schema/core/tests/basic/test_service.wsdl</wsdlFile>
    </service>
    <service name="TestServiceWrongWSDL" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="providers" value="
            GetRPProvider GetMRPProvider QueryRPProvider SetRPProvider  
            DestroyProvider SetTerminationTimeProvider"/>
        <parameter name="handlerClass"
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.TestService"/>
        <wsdlFile>share/schema/core/tests/invalidate/invalidate_port_type.wsdl</wsdlFile>
    </service>
    <service name="NotificationTestService" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="providers" value="
            GetRPProvider SetRPProvider 
            GetCurrentMessageProvider 
            org.globus.wsrf.impl.notification.PersistenceTestSubscribeProvider
            org.globus.wsrf.impl.InvalidateProvider"/>
        <parameter name="handlerClass"
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.notification.NotificationTestService"/>
        <wsdlFile>share/schema/core/tests/notification/notification_test_service.wsdl</wsdlFile>
    </service>
    <service name="PersistenceTestSubscriptionManager" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="providers"
            value="DestroyProvider SetTerminationTimeProvider
            GetRPProvider PauseSubscriptionProvider
            org.globus.wsrf.impl.InvalidateProvider"/>
        <parameter name="handlerClass"
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.notification.ResumeSubscriptionProvider"/>
        <wsdlFile>share/schema/core/tests/notification/persistence_test_subscription_manager_service.wsdl</wsdlFile>
    </service>
    <service name="SecurityTestService" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="handlerClass"
                   value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.security.SecurityTestService"/>
        <wsdlFile>share/schema/core/tests/security/security_test_service.wsdl</wsdlFile>
        <!-- Does self authz by default -->
        <parameter name="securityDescriptor" value="etc/globus_wsrf_test_unit/security-config.xml"/>
        <!-- For use only when identity authz is used-->
        <!-- parameter name="securityDescriptor" value="etc/globus_wsrf_test_unit/identity-security-config.xml"/>
        <parameter name="idenAuthz-identity" value="Identity used by client"/ -->
        <parameter name="providers" value="GetRPProvider SubscribeProvider 
	GetCurrentMessageProvider"/>
    </service>
    <service name="AuthzCalloutTestService" provider="Handler"
        use="literal" style="document">
        <parameter name="allowedMethods" value="*"/>
        <parameter name="scope" value="Application"/>
        <parameter name="handlerClass"
                   value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className"
            value="org.globus.wsrf.impl.security.SecurityTestService"/>
        <wsdlFile>share/schema/core/tests/security/security_test_service.wsdl</wsdlFile>
        <!-- Does self authz by default -->
        <parameter name="securityDescriptor" value="etc/globus_wsrf_test_unit/security-config.xml"/>
        <!-- For use only when identity authz is used-->
        <!-- parameter name="securityDescriptor" value="etc/globus_wsrf_test_unit/identity-security-config.xml"/>
        <parameter name="idenAuthz-identity" value="Identity used by client"/ -->
        <parameter name="providers" value="GetRPProvider SubscribeProvider 
	GetCurrentMessageProvider"/>
        <parameter name="customAuthzTest" value="true"/>
    </service>

    <!-- Using sample service as test service with some configuration -->
    <service name="TestAuthzService" provider="Handler" use="literal" 
        style="document">
        <parameter name="allowedMethodsClass" 
            value="org.globus.wsrf.samples.authzService.AuthzServicePortType"/>
        <parameter name="handlerClass" 
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className" 
            value="org.globus.wsrf.samples.authzService.SampleAuthzService"/>
        <wsdlFile>share/schema/core/samples/authzService/authzService_service.wsdl</wsdlFile>
        <parameter name="scope" value="Application"/>
        <parameter name="providers" value="
             GetRPProvider GetMRPProvider SetRPProvider 
        GetCurrentMessageProvider QueryRPProvider"/>
    </service>

    <service name="TestRPCService" provider="Handler" 
             use="encoded" style="rpc">
        <parameter name="className" 
            value="org.globus.wsrf.handlers.RPCService"/>
        <parameter name="handlerClass"
            value="org.apache.axis.providers.java.RPCProvider"/>
        <parameter name="scope" value="Application"/>
        <wsdlFile>share/schema/core/tests/basic/TestRPCService.wsdl</wsdlFile>
    </service>

    <service name="TestEnumService" provider="Handler" 
        use="literal" style="document">
        <parameter name="allowedMethods" 
            value="*"/>
        <parameter name="handlerClass" 
            value="org.globus.axis.providers.RPCProvider"/>
        <parameter name="className" 
             value="org.globus.ws.enumeration.TestEnumService"/>
        <parameter name="providers" 
            value="EnumerationProvider"/>
        <wsdlFile>share/schema/core/tests/enumeration/enumeration_service.wsdl</wsdlFile>
        <parameter name="scope" value="Application"/>
    </service>

 <typeMapping 
        encodingStyle="" 
        deserializer="org.apache.axis.encoding.ser.SimpleDeserializerFactory"
        serializer="org.apache.axis.encoding.ser.SimpleSerializerFactory"
        type="java:java.lang.String"
        qname="ns12:QueryExpressionDialect" 
        xmlns:ns12="http://www.globus.org/foobar"/>

</deployment>
